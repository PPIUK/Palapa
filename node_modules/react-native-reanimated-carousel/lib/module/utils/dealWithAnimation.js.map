{"version":3,"sources":["dealWithAnimation.ts"],"names":["withSpring","withTiming","dealWithAnimation","withAnimation","type","value","cb","config","isFinished"],"mappings":"AACA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,yBAAvC;AAEA,OAAO,SAASC,iBAAT,CACHC,aADG,EAEyD;AAC5D;;AACA,UAAQA,aAAa,CAACC,IAAtB;AACI,SAAK,QAAL;AACI,aAAO,CAACC,KAAD,EAAQC,EAAR,KAAe;AAClB,eAAON,UAAU,CAACK,KAAD,EAAQF,aAAa,CAACI,MAAtB,EAA+BC,UAAD,IAC3CF,EAAE,CAACE,UAAD,CADW,CAAjB;AAGH,OAJD;;AAKJ,SAAK,QAAL;AACI,aAAO,CAACH,KAAD,EAAQC,EAAR,KAAe;AAClB,eAAOL,UAAU,CAACI,KAAD,EAAQF,aAAa,CAACI,MAAtB,EAA+BC,UAAD,IAC3CF,EAAE,CAACE,UAAD,CADW,CAAjB;AAGH,OAJD;AARR;AAcH","sourcesContent":["import type { WithAnimation } from '../types';\nimport { withSpring, withTiming } from 'react-native-reanimated';\n\nexport function dealWithAnimation(\n    withAnimation: WithAnimation\n): (value: number, cb: (isFinished: boolean) => void) => number {\n    'worklet';\n    switch (withAnimation.type) {\n        case 'spring':\n            return (value, cb) => {\n                return withSpring(value, withAnimation.config, (isFinished) =>\n                    cb(isFinished as boolean)\n                );\n            };\n        case 'timing':\n            return (value, cb) => {\n                return withTiming(value, withAnimation.config, (isFinished) =>\n                    cb(isFinished as boolean)\n                );\n            };\n    }\n}\n"]}