{"version":3,"sources":["useAutoPlay.ts"],"names":["React","useAutoPlay","opts","autoPlay","autoPlayReverse","autoPlayInterval","carouselController","timer","useRef","stopped","play","useCallback","current","setTimeout","prev","onFinished","next","pause","clearInterval","start","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAKJ;AACC,QAAM;AACFC,IAAAA,QAAQ,GAAG,KADT;AAEFC,IAAAA,eAAe,GAAG,KAFhB;AAGFC,IAAAA,gBAHE;AAIFC,IAAAA;AAJE,MAKFJ,IALJ;AAOA,QAAMK,KAAK,GAAGP,KAAK,CAACQ,MAAN,EAAd;AACA,QAAMC,OAAO,GAAGT,KAAK,CAACQ,MAAN,CAAsB,CAACL,QAAvB,CAAhB;AAEA,QAAMO,IAAI,GAAGV,KAAK,CAACW,WAAN,CAAkB,MAAM;AACjC,QAAIF,OAAO,CAACG,OAAZ,EAAqB;AACjB;AACH;;AAEDL,IAAAA,KAAK,CAACK,OAAN,GAAgBC,UAAU,CAAC,MAAM;AAC7BT,MAAAA,eAAe,GACTE,kBAAkB,CAACQ,IAAnB,CAAwB;AAAEC,QAAAA,UAAU,EAAEL;AAAd,OAAxB,CADS,GAETJ,kBAAkB,CAACU,IAAnB,CAAwB;AAAED,QAAAA,UAAU,EAAEL;AAAd,OAAxB,CAFN;AAGH,KAJyB,EAIvBL,gBAJuB,CAA1B;AAKH,GAVY,EAUV,CAACD,eAAD,EAAkBC,gBAAlB,EAAoCC,kBAApC,CAVU,CAAb;AAYA,QAAMW,KAAK,GAAGjB,KAAK,CAACW,WAAN,CAAkB,MAAM;AAClC,QAAI,CAACR,QAAL,EAAe;AACX;AACH;;AACDI,IAAAA,KAAK,CAACK,OAAN,IAAiBM,aAAa,CAACX,KAAK,CAACK,OAAP,CAA9B;AACAH,IAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB;AACH,GANa,EAMX,CAACT,QAAD,CANW,CAAd;AAQA,QAAMgB,KAAK,GAAGnB,KAAK,CAACW,WAAN,CAAkB,MAAM;AAClC,QAAI,CAACR,QAAL,EAAe;AACX;AACH;;AACDM,IAAAA,OAAO,CAACG,OAAR,GAAkB,KAAlB;AACAF,IAAAA,IAAI;AACP,GANa,EAMX,CAACA,IAAD,EAAOP,QAAP,CANW,CAAd;AAQAH,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AAClB,QAAIjB,QAAJ,EAAc;AACVgB,MAAAA,KAAK;AACR,KAFD,MAEO;AACHF,MAAAA,KAAK;AACR;;AACD,WAAOA,KAAP;AACH,GAPD,EAOG,CAACA,KAAD,EAAQE,KAAR,EAAehB,QAAf,CAPH;AASA,SAAO;AACHc,IAAAA,KADG;AAEHE,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import * as React from 'react';\nimport type { ICarouselController } from './useCarouselController';\n\nexport function useAutoPlay(opts: {\n    autoPlay?: boolean;\n    autoPlayInterval?: number;\n    autoPlayReverse?: boolean;\n    carouselController: ICarouselController;\n}) {\n    const {\n        autoPlay = false,\n        autoPlayReverse = false,\n        autoPlayInterval,\n        carouselController,\n    } = opts;\n\n    const timer = React.useRef<NodeJS.Timer>();\n    const stopped = React.useRef<boolean>(!autoPlay);\n\n    const play = React.useCallback(() => {\n        if (stopped.current) {\n            return;\n        }\n\n        timer.current = setTimeout(() => {\n            autoPlayReverse\n                ? carouselController.prev({ onFinished: play })\n                : carouselController.next({ onFinished: play });\n        }, autoPlayInterval);\n    }, [autoPlayReverse, autoPlayInterval, carouselController]);\n\n    const pause = React.useCallback(() => {\n        if (!autoPlay) {\n            return;\n        }\n        timer.current && clearInterval(timer.current);\n        stopped.current = true;\n    }, [autoPlay]);\n\n    const start = React.useCallback(() => {\n        if (!autoPlay) {\n            return;\n        }\n        stopped.current = false;\n        play();\n    }, [play, autoPlay]);\n\n    React.useEffect(() => {\n        if (autoPlay) {\n            start();\n        } else {\n            pause();\n        }\n        return pause;\n    }, [pause, start, autoPlay]);\n\n    return {\n        pause,\n        start,\n    };\n}\n"]}