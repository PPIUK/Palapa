{"version":3,"sources":["useOnProgressChange.ts"],"names":["runOnJS","useAnimatedReaction","DATA_LENGTH","useOnProgressChange","opts","offsetX","rawData","size","onProgressChange","rawDataLength","length","value","_value","SINGLE_ITEM","DOUBLE_ITEM","absoluteProgress","Math","abs"],"mappings":"AAAA,SACIA,OADJ,EAEIC,mBAFJ,QAGO,yBAHP;AAIA,SAASC,WAAT,QAA4B,cAA5B;AAGA,OAAO,SAASC,mBAAT,CACHC,IADG,EAML;AACE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAA+CJ,IAArD;AACA,QAAMK,aAAa,GAAGH,OAAO,CAACI,MAA9B;AACAT,EAAAA,mBAAmB,CACf,MAAMI,OAAO,CAACM,KADC,EAEdC,MAAD,IAAY;AACR,QAAID,KAAK,GAAGC,MAAZ;;AAEA,QAAIH,aAAa,KAAKP,WAAW,CAACW,WAAlC,EAA+C;AAC3CF,MAAAA,KAAK,GAAGA,KAAK,GAAGJ,IAAhB;AACH;;AAED,QAAIE,aAAa,KAAKP,WAAW,CAACY,WAAlC,EAA+C;AAC3CH,MAAAA,KAAK,GAAGA,KAAK,IAAIJ,IAAI,GAAG,CAAX,CAAb;AACH;;AAED,QAAIQ,gBAAgB,GAAGC,IAAI,CAACC,GAAL,CAASN,KAAK,GAAGJ,IAAjB,CAAvB;;AAEA,QAAII,KAAK,GAAG,CAAZ,EAAe;AACXI,MAAAA,gBAAgB,GAAGN,aAAa,GAAGM,gBAAnC;AACH;;AAED,KAAC,CAACP,gBAAF,IACIR,OAAO,CAACQ,gBAAD,CAAP,CAA0BG,KAA1B,EAAiCI,gBAAjC,CADJ;AAEH,GArBc,EAsBf,CAACP,gBAAD,EAAmBC,aAAnB,CAtBe,CAAnB;AAwBH","sourcesContent":["import Animated, {\n    runOnJS,\n    useAnimatedReaction,\n} from 'react-native-reanimated';\nimport { DATA_LENGTH } from '../constants';\nimport type { TCarouselProps } from '../types';\n\nexport function useOnProgressChange(\n    opts: {\n        size: number;\n        offsetX: Animated.SharedValue<number>;\n        rawData: TCarouselProps['data'];\n    } & Pick<TCarouselProps, 'onProgressChange'>\n) {\n    const { offsetX, rawData, size, onProgressChange } = opts;\n    const rawDataLength = rawData.length;\n    useAnimatedReaction(\n        () => offsetX.value,\n        (_value) => {\n            let value = _value;\n\n            if (rawDataLength === DATA_LENGTH.SINGLE_ITEM) {\n                value = value % size;\n            }\n\n            if (rawDataLength === DATA_LENGTH.DOUBLE_ITEM) {\n                value = value % (size * 2);\n            }\n\n            let absoluteProgress = Math.abs(value / size);\n\n            if (value > 0) {\n                absoluteProgress = rawDataLength - absoluteProgress;\n            }\n\n            !!onProgressChange &&\n                runOnJS(onProgressChange)(value, absoluteProgress);\n        },\n        [onProgressChange, rawDataLength]\n    );\n}\n"]}