{"version":3,"sources":["useAutoPlay.ts"],"names":["useAutoPlay","opts","autoPlay","autoPlayReverse","autoPlayInterval","carouselController","timer","React","useRef","stopped","play","useCallback","current","setTimeout","prev","onFinished","next","pause","clearInterval","start","useEffect"],"mappings":"yFAAA,oD,0/BAGO,QAASA,CAAAA,WAAT,CAAqBC,IAArB,CAKJ,CACC,mBAKIA,IALJ,CACIC,QADJ,CACIA,QADJ,yBACe,KADf,sCAKID,IALJ,CAEIE,eAFJ,CAEIA,eAFJ,gCAEsB,KAFtB,uBAGIC,gBAHJ,CAKIH,IALJ,CAGIG,gBAHJ,CAIIC,kBAJJ,CAKIJ,IALJ,CAIII,kBAJJ,CAOA,GAAMC,CAAAA,KAAK,CAAGC,KAAK,CAACC,MAAN,EAAd,CACA,GAAMC,CAAAA,OAAO,CAAGF,KAAK,CAACC,MAAN,CAAsB,CAACN,QAAvB,CAAhB,CAEA,GAAMQ,CAAAA,IAAI,CAAGH,KAAK,CAACI,WAAN,CAAkB,UAAM,CACjC,GAAIF,OAAO,CAACG,OAAZ,CAAqB,CACjB,OACH,CAEDN,KAAK,CAACM,OAAN,CAAgBC,UAAU,CAAC,UAAM,CAC7BV,eAAe,CACTE,kBAAkB,CAACS,IAAnB,CAAwB,CAAEC,UAAU,CAAEL,IAAd,CAAxB,CADS,CAETL,kBAAkB,CAACW,IAAnB,CAAwB,CAAED,UAAU,CAAEL,IAAd,CAAxB,CAFN,CAGH,CAJyB,CAIvBN,gBAJuB,CAA1B,CAKH,CAVY,CAUV,CAACD,eAAD,CAAkBC,gBAAlB,CAAoCC,kBAApC,CAVU,CAAb,CAYA,GAAMY,CAAAA,KAAK,CAAGV,KAAK,CAACI,WAAN,CAAkB,UAAM,CAClC,GAAI,CAACT,QAAL,CAAe,CACX,OACH,CACDI,KAAK,CAACM,OAAN,EAAiBM,aAAa,CAACZ,KAAK,CAACM,OAAP,CAA9B,CACAH,OAAO,CAACG,OAAR,CAAkB,IAAlB,CACH,CANa,CAMX,CAACV,QAAD,CANW,CAAd,CAQA,GAAMiB,CAAAA,KAAK,CAAGZ,KAAK,CAACI,WAAN,CAAkB,UAAM,CAClC,GAAI,CAACT,QAAL,CAAe,CACX,OACH,CACDO,OAAO,CAACG,OAAR,CAAkB,KAAlB,CACAF,IAAI,GACP,CANa,CAMX,CAACA,IAAD,CAAOR,QAAP,CANW,CAAd,CAQAK,KAAK,CAACa,SAAN,CAAgB,UAAM,CAClB,GAAIlB,QAAJ,CAAc,CACViB,KAAK,GACR,CAFD,IAEO,CACHF,KAAK,GACR,CACD,MAAOA,CAAAA,KAAP,CACH,CAPD,CAOG,CAACA,KAAD,CAAQE,KAAR,CAAejB,QAAf,CAPH,EASA,MAAO,CACHe,KAAK,CAALA,KADG,CAEHE,KAAK,CAALA,KAFG,CAAP,CAIH","sourcesContent":["import * as React from 'react';\nimport type { ICarouselController } from './useCarouselController';\n\nexport function useAutoPlay(opts: {\n    autoPlay?: boolean;\n    autoPlayInterval?: number;\n    autoPlayReverse?: boolean;\n    carouselController: ICarouselController;\n}) {\n    const {\n        autoPlay = false,\n        autoPlayReverse = false,\n        autoPlayInterval,\n        carouselController,\n    } = opts;\n\n    const timer = React.useRef<NodeJS.Timer>();\n    const stopped = React.useRef<boolean>(!autoPlay);\n\n    const play = React.useCallback(() => {\n        if (stopped.current) {\n            return;\n        }\n\n        timer.current = setTimeout(() => {\n            autoPlayReverse\n                ? carouselController.prev({ onFinished: play })\n                : carouselController.next({ onFinished: play });\n        }, autoPlayInterval);\n    }, [autoPlayReverse, autoPlayInterval, carouselController]);\n\n    const pause = React.useCallback(() => {\n        if (!autoPlay) {\n            return;\n        }\n        timer.current && clearInterval(timer.current);\n        stopped.current = true;\n    }, [autoPlay]);\n\n    const start = React.useCallback(() => {\n        if (!autoPlay) {\n            return;\n        }\n        stopped.current = false;\n        play();\n    }, [play, autoPlay]);\n\n    React.useEffect(() => {\n        if (autoPlay) {\n            start();\n        } else {\n            pause();\n        }\n        return pause;\n    }, [pause, start, autoPlay]);\n\n    return {\n        pause,\n        start,\n    };\n}\n"]}