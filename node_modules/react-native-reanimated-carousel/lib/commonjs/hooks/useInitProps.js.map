{"version":3,"sources":["useInitProps.ts"],"names":["useInitProps","props","defaultIndex","data","rawData","loop","enabled","autoPlayInterval","_autoPlayInterval","scrollAnimationDuration","style","panGestureHandlerProps","pagingEnabled","snapEnabled","enableSnap","_width","width","_height","height","Math","round","max","React","useMemo","length","DATA_LENGTH","SINGLE_ITEM","DOUBLE_ITEM","mode","modeConfig","showLength"],"mappings":"4QAAA,oDACA,uC,kxBAqBO,QAASA,CAAAA,YAAT,CACHC,KADG,CAEwB,uBAC3B,wBAaIA,KAbJ,CACIC,YADJ,CACIA,YADJ,8BACmB,CADnB,iCAaID,KAbJ,CAEIE,IAFJ,CAEUC,OAFV,sBAEoB,EAFpB,yBAaIH,KAbJ,CAGII,IAHJ,CAGIA,IAHJ,sBAGW,IAHX,4BAaIJ,KAbJ,CAIIK,OAJJ,CAIIA,OAJJ,yBAIc,IAJd,sCAaIL,KAbJ,CAKIM,gBALJ,CAKsBC,iBALtB,gCAK0C,IAL1C,6CAaIP,KAbJ,CAMIQ,uBANJ,CAMIA,uBANJ,gCAM8B,GAN9B,oCAaIR,KAbJ,CAOIS,KAPJ,CAOIA,KAPJ,uBAOY,EAPZ,oCAaIT,KAbJ,CAQIU,sBARJ,CAQIA,sBARJ,gCAQ6B,EAR7B,4CAaIV,KAbJ,CASIW,aATJ,CASIA,aATJ,+BASoB,IATpB,yCAaIX,KAbJ,CAUIY,WAVJ,CAUIA,WAVJ,gDAUkBZ,KAAK,CAACa,UAVxB,0BAUsC,IAVtC,oBAWWC,MAXX,CAaId,KAbJ,CAWIe,KAXJ,CAYYC,OAZZ,CAaIhB,KAbJ,CAYIiB,MAZJ,CAeA,GAAMF,CAAAA,KAAK,CAAGG,IAAI,CAACC,KAAL,CAAWL,MAAM,EAAI,CAArB,CAAd,CACA,GAAMG,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,EAAI,CAAtB,CAAf,CACA,GAAMV,CAAAA,gBAAgB,CAAGY,IAAI,CAACE,GAAL,CAASb,iBAAT,CAA4B,CAA5B,CAAzB,CAEA,GAAML,CAAAA,IAAI,CAAGmB,eAAMC,OAAN,CAAmB,UAAM,CAClC,GAAI,CAAClB,IAAL,CAAW,MAAOD,CAAAA,OAAP,CAEX,GAAIA,OAAO,CAACoB,MAAR,GAAmBC,uBAAYC,WAAnC,CAAgD,CAC5C,MAAO,CAACtB,OAAO,CAAC,CAAD,CAAR,CAAaA,OAAO,CAAC,CAAD,CAApB,CAAyBA,OAAO,CAAC,CAAD,CAAhC,CAAP,CACH,CAED,GAAIA,OAAO,CAACoB,MAAR,GAAmBC,uBAAYE,WAAnC,CAAgD,CAC5C,MAAO,CAACvB,OAAO,CAAC,CAAD,CAAR,CAAaA,OAAO,CAAC,CAAD,CAApB,CAAyBA,OAAO,CAAC,CAAD,CAAhC,CAAqCA,OAAO,CAAC,CAAD,CAA5C,CAAP,CACH,CAED,MAAOA,CAAAA,OAAP,CACH,CAZY,CAYV,CAACA,OAAD,CAAUC,IAAV,CAZU,CAAb,CAcA,GAAIJ,KAAK,CAAC2B,IAAN,GAAe,gBAAf,EAAmC3B,KAAK,CAAC2B,IAAN,GAAe,kBAAtD,CAA0E,6CACtE,GAAI,CAAC3B,KAAK,CAAC4B,UAAX,CAAuB,CACnB5B,KAAK,CAAC4B,UAAN,CAAmB,EAAnB,CACH,CACD5B,KAAK,CAAC4B,UAAN,CAAiBC,UAAjB,2CACI7B,KAAK,CAAC4B,UADV,eACI,kBAAkBC,UADtB,8BACoC3B,IAAI,CAACqB,MAAL,CAAc,CADlD,CAEH,CACD,sCACOvB,KADP,MAEIC,YAAY,CAAZA,YAFJ,CAGIC,IAAI,CAAJA,IAHJ,CAIIC,OAAO,CAAPA,OAJJ,CAKIC,IAAI,CAAJA,IALJ,CAMIC,OAAO,CAAPA,OANJ,CAOIC,gBAAgB,CAAhBA,gBAPJ,CAQIE,uBAAuB,CAAvBA,uBARJ,CASIC,KAAK,CAALA,KATJ,CAUIC,sBAAsB,CAAtBA,sBAVJ,CAWIC,aAAa,CAAbA,aAXJ,CAYIC,WAAW,CAAXA,WAZJ,CAaIG,KAAK,CAALA,KAbJ,CAcIE,MAAM,CAANA,MAdJ,GAgBH","sourcesContent":["import React from 'react';\nimport { DATA_LENGTH } from '../constants';\nimport type { TCarouselProps } from '../types';\n\ntype TGetRequiredProps<P extends keyof TCarouselProps> = Record<\n    P,\n    Required<TCarouselProps>[P]\n>;\n\nexport type TInitializeCarouselProps<T> = TCarouselProps<T> &\n    TGetRequiredProps<\n        | 'defaultIndex'\n        | 'loop'\n        | 'width'\n        | 'height'\n        | 'scrollAnimationDuration'\n        | 'autoPlayInterval'\n    > & {\n        // Raw data that has not been processed\n        rawData: T[];\n    };\n\nexport function useInitProps<T>(\n    props: TCarouselProps<T>\n): TInitializeCarouselProps<T> {\n    const {\n        defaultIndex = 0,\n        data: rawData = [],\n        loop = true,\n        enabled = true,\n        autoPlayInterval: _autoPlayInterval = 1000,\n        scrollAnimationDuration = 500,\n        style = {},\n        panGestureHandlerProps = {},\n        pagingEnabled = true,\n        snapEnabled = props.enableSnap ?? true,\n        width: _width,\n        height: _height,\n    } = props;\n\n    const width = Math.round(_width || 0);\n    const height = Math.round(_height || 0);\n    const autoPlayInterval = Math.max(_autoPlayInterval, 0);\n\n    const data = React.useMemo<T[]>(() => {\n        if (!loop) return rawData;\n\n        if (rawData.length === DATA_LENGTH.SINGLE_ITEM) {\n            return [rawData[0], rawData[0], rawData[0]];\n        }\n\n        if (rawData.length === DATA_LENGTH.DOUBLE_ITEM) {\n            return [rawData[0], rawData[1], rawData[0], rawData[1]];\n        }\n\n        return rawData;\n    }, [rawData, loop]);\n\n    if (props.mode === 'vertical-stack' || props.mode === 'horizontal-stack') {\n        if (!props.modeConfig) {\n            props.modeConfig = {};\n        }\n        props.modeConfig.showLength =\n            props.modeConfig?.showLength ?? data.length - 1;\n    }\n    return {\n        ...props,\n        defaultIndex,\n        data,\n        rawData,\n        loop,\n        enabled,\n        autoPlayInterval,\n        scrollAnimationDuration,\n        style,\n        panGestureHandlerProps,\n        pagingEnabled,\n        snapEnabled,\n        width,\n        height,\n    };\n}\n"]}