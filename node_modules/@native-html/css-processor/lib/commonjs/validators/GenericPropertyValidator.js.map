{"version":3,"sources":["GenericPropertyValidator.ts"],"names":["GenericCSSPropertyValidator","constructor","model","config","propertyName","isShorthand","compatCategory","translatable","propagationCategory","inheritable","displayCategory","display","_isShorthand"],"mappings":";;;;;;;;;AAUO,MAAeA,2BAAf,CAIP;AASEC,EAAAA,WAAW,CACT;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GADS,EAETC,WAFS,EAGT;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKG,cAAL,GAAsBJ,KAAK,CAACK,YAAN,GAAqB,QAArB,GAAgC,KAAtD;AACA,SAAKC,mBAAL,GAA2BN,KAAK,CAACO,WAAN,GAAoB,MAApB,GAA6B,QAAxD;AACA,SAAKC,eAAL,GAAuBR,KAAK,CAACS,OAA7B;AACA,SAAKP,YAAL,GAAoBA,YAApB;AACA,SAAKQ,YAAL,GAAoBP,WAApB;AACD;AAED;AACF;AACA;AACA;AACA;;;AAYEA,EAAAA,WAAW,GAAY;AACrB,WAAO,KAAKO,YAAZ;AACD;;AAxCH","sourcesContent":["import { CSSProcessorConfig } from '../config';\nimport { CSSPropertyModel, CSSPropertyValidatorParams } from './types';\nimport {\n  CSSPropertyCompatCategory,\n  CSSPropertyDisplayCategory,\n  CSSPropertyPropagationCategory,\n  CSSPropertySpecs\n} from '../processor-types';\nimport { ShortMergeRequest } from '../ShortMergeRequest';\n\nexport abstract class GenericCSSPropertyValidator<\n  C extends CSSPropertyModel = any,\n  N = any\n> implements CSSPropertySpecs\n{\n  protected readonly model: C;\n  protected readonly config: CSSProcessorConfig;\n  public readonly compatCategory: CSSPropertyCompatCategory;\n  public readonly propagationCategory: CSSPropertyPropagationCategory;\n  public readonly displayCategory: CSSPropertyDisplayCategory;\n  public readonly propertyName: string;\n  private readonly _isShorthand: boolean;\n\n  constructor(\n    { model, config, propertyName }: CSSPropertyValidatorParams<C>,\n    isShorthand: boolean\n  ) {\n    this.model = model;\n    this.config = config;\n    this.compatCategory = model.translatable ? 'native' : 'web';\n    this.propagationCategory = model.inheritable ? 'flow' : 'retain';\n    this.displayCategory = model.display;\n    this.propertyName = propertyName;\n    this._isShorthand = isShorthand;\n  }\n\n  /**\n   * Normalize value from inline styles\n   *\n   * @param value\n   */\n  abstract normalizeInlineCSSValue(\n    value: string | N\n  ): ShortMergeRequest | N | null;\n\n  /**\n   * Normalize value from native styles.\n   *\n   * @param value\n   */\n  abstract normalizeNativeValue(value: N): ShortMergeRequest | N | null;\n\n  isShorthand(): boolean {\n    return this._isShorthand;\n  }\n}\n"]}