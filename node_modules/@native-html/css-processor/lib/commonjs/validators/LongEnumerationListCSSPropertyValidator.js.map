{"version":3,"sources":["LongEnumerationListCSSPropertyValidator.ts"],"names":["WHITESPACE_REGEX","LongEnumerationListCSSPropertyValidator","LongCSSPropertyValidator","constructor","params","allowedList","normalizeRawInlineCSSValue","value","input","split","values","item","indexOf","push","length"],"mappings":";;;;;;;AAAA;;;;AAGA,MAAMA,gBAAgB,GAAG,KAAzB;;AAEO,MAAMC,uCAAN,SAEGC,kDAFH,CAEyC;AAE9CC,EAAAA,WAAW,CAACC,MAAD,EAAwCC,WAAxC,EAA+D;AACxE,UAAMD,MAAN;;AADwE;;AAExE,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AAEDC,EAAAA,0BAA0B,CAACC,KAAD,EAAiC;AACzD,UAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYT,gBAAZ,CAAd;AACA,UAAMU,MAAgB,GAAG,EAAzB;;AACA,SAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;AACxB,UAAI,KAAKH,WAAL,CAAiBO,OAAjB,CAAyBD,IAAzB,MAAmC,CAAC,CAAxC,EAA2C;AACzCD,QAAAA,MAAM,CAACG,IAAP,CAAYF,IAAZ;AACD;AACF;;AACD,WAAOD,MAAM,CAACI,MAAP,GAAgB,CAAhB,GAAoBJ,MAApB,GAA6B,IAApC;AACD;;AAhB6C","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\nconst WHITESPACE_REGEX = /\\s+/;\n\nexport class LongEnumerationListCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, string[]> {\n  public readonly allowedList: ReadonlyArray<string>;\n  constructor(params: CSSPropertyValidatorParams<C>, allowedList: string[]) {\n    super(params);\n    this.allowedList = allowedList;\n  }\n\n  normalizeRawInlineCSSValue(value: string): string[] | null {\n    const input = value.split(WHITESPACE_REGEX);\n    const values: string[] = [];\n    for (const item of input) {\n      if (this.allowedList.indexOf(item) !== -1) {\n        values.push(item);\n      }\n    }\n    return values.length > 0 ? values : null;\n  }\n}\n"]}