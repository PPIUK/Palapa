{"version":3,"sources":["LongFontFamilyPropertyValidator.ts"],"names":["SEPARATOR_REGEX","LongFontFamilyPropertyValidator","LongCSSPropertyValidator","normalizeRawInlineCSSValue","value","values","split","font","normalizedFont","isFontSupported","length","config","normalizeNativeValue","normalizeInlineCSSValue"],"mappings":";;;;;;;AAAA;;AACA;;;;AAGA,MAAMA,eAAe,GAAG,MAAxB;;AAEO,MAAMC,+BAAN,SAEGC,kDAFH,CAEuC;AAC5CC,EAAAA,0BAA0B,CAACC,KAAD,EAA+B;AACvD,UAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYN,eAAZ,CAAf;;AACA,SAAK,MAAMO,IAAX,IAAmBF,MAAnB,EAA2B;AACzB,YAAMG,cAAc,GAAG,gCAAkBD,IAAlB,CAAvB;AACA,YAAME,eAAe,GACnBD,cAAc,CAACE,MAAf,IAAyB,KAAKC,MAAL,CAAYF,eAAZ,CAA4BD,cAA5B,CAD3B;;AAEA,UAAIC,eAAJ,EAAqB;AACnB,eAAO,OAAOA,eAAP,KAA2B,QAA3B,GACHA,eADG,GAEHD,cAFJ;AAGD;AACF;;AACD,WAAO,IAAP;AACD;;AACDI,EAAAA,oBAAoB,CAACR,KAAD,EAAgB;AAClC,WAAO,KAAKS,uBAAL,CAA6BT,KAA7B,CAAP;AACD;;AAjB2C","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport normalizeFontName from './normalizeFontName';\nimport { CSSPropertyModel } from './types';\n\nconst SEPARATOR_REGEX = /,\\s*/;\n\nexport class LongFontFamilyPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, string> {\n  normalizeRawInlineCSSValue(value: string): string | null {\n    const values = value.split(SEPARATOR_REGEX);\n    for (const font of values) {\n      const normalizedFont = normalizeFontName(font);\n      const isFontSupported =\n        normalizedFont.length && this.config.isFontSupported(normalizedFont);\n      if (isFontSupported) {\n        return typeof isFontSupported === 'string'\n          ? isFontSupported\n          : normalizedFont;\n      }\n    }\n    return null;\n  }\n  normalizeNativeValue(value: string) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"]}