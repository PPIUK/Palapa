{"version":3,"sources":["LongFontSizeCSSValidator.ts"],"names":["LongFontSizeCSSValidator","LongSizeCSSPropertyValidator","computeSize","value","unit","computeEmSize","normalizeRawInlineCSSValue","config","absoluteFontSizesPixelMap","relativeFontSizesCoefficientMap","normalizeNativeValue","normalizeInlineCSSValue"],"mappings":";;;;;;;AACA;;AACA;;AAGO,MAAMA,wBAAN,SAEGC,0DAFH,CAEmC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAAqC;AACxD,QAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,aAAO,KAAKC,aAAL,CAAmBF,KAAK,GAAG,GAA3B,CAAP;AACD;;AACD,WAAO,MAAMD,WAAN,CAAkBC,KAAlB,EAAyBC,IAAzB,CAAP;AACD;;AAEDE,EAAAA,0BAA0B,CAACH,KAAD,EAAgB;AACxC,QAAI,2BAAa,KAAKI,MAAL,CAAYC,yBAAzB,EAAoDL,KAApD,CAAJ,EAAgE;AAC9D,aAAO,KAAKI,MAAL,CAAYC,yBAAZ,CAAsCL,KAAtC,CAAP;AACD;;AACD,QAAI,2BAAa,KAAKI,MAAL,CAAYE,+BAAzB,EAA0DN,KAA1D,CAAJ,EAAsE;AACpE,aAAO,KAAKE,aAAL,CACL,KAAKE,MAAL,CAAYE,+BAAZ,CAA4CN,KAA5C,CADK,CAAP;AAGD;;AACD,WAAO,MAAMG,0BAAN,CAAiCH,KAAjC,CAAP;AACD;;AAEDO,EAAAA,oBAAoB,CAACP,KAAD,EAAyB;AAC3C,WAAO,KAAKQ,uBAAL,CAA6BR,KAA7B,CAAP;AACD;;AAtBuC","sourcesContent":["import { CSSLengthUnit } from '../config';\nimport { lookupRecord } from '../helpers';\nimport { LongSizeCSSPropertyValidator } from './LongSizeCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nexport class LongFontSizeCSSValidator<\n  C extends CSSPropertyModel\n> extends LongSizeCSSPropertyValidator<C> {\n  protected computeSize(value: number, unit: CSSLengthUnit) {\n    if (unit === '%') {\n      return this.computeEmSize(value / 100);\n    }\n    return super.computeSize(value, unit);\n  }\n\n  normalizeRawInlineCSSValue(value: string) {\n    if (lookupRecord(this.config.absoluteFontSizesPixelMap, value)) {\n      return this.config.absoluteFontSizesPixelMap[value];\n    }\n    if (lookupRecord(this.config.relativeFontSizesCoefficientMap, value)) {\n      return this.computeEmSize(\n        this.config.relativeFontSizesCoefficientMap[value]\n      );\n    }\n    return super.normalizeRawInlineCSSValue(value);\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"]}