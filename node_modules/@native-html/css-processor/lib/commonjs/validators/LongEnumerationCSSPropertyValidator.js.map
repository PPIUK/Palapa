{"version":3,"sources":["LongEnumerationCSSPropertyValidator.ts"],"names":["LongEnumerationCSSPropertyValidator","LongCSSPropertyValidator","constructor","params","allowedList","normalizeRawInlineCSSValue","v","indexOf","normalizeNativeValue","normalizeInlineCSSValue"],"mappings":";;;;;;;AAAA;;;;AAGO,MAAMA,mCAAN,SAEGC,kDAFH,CAEuC;AAE5CC,EAAAA,WAAW,CAACC,MAAD,EAAwCC,WAAxC,EAA+D;AACxE,UAAMD,MAAN;;AADwE;;AAExE,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AAEDC,EAAAA,0BAA0B,CAACC,CAAD,EAA2B;AACnD,QAAI,KAAKF,WAAL,CAAiBG,OAAjB,CAAyBD,CAAzB,MAAgC,CAAC,CAArC,EAAwC;AACtC,aAAOA,CAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEDE,EAAAA,oBAAoB,CAACF,CAAD,EAA2B;AAC7C,WAAO,KAAKG,uBAAL,CAA6BH,CAA7B,CAAP;AACD;;AAhB2C","sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyValidatorParams, CSSPropertyModel } from './types';\n\nexport class LongEnumerationCSSPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, string> {\n  public readonly allowedList: ReadonlyArray<string>;\n  constructor(params: CSSPropertyValidatorParams<C>, allowedList: string[]) {\n    super(params);\n    this.allowedList = allowedList;\n  }\n\n  normalizeRawInlineCSSValue(v: string): string | null {\n    if (this.allowedList.indexOf(v) !== -1) {\n      return v;\n    }\n    return null;\n  }\n\n  normalizeNativeValue(v: string): string | null {\n    return this.normalizeInlineCSSValue(v);\n  }\n}\n"]}