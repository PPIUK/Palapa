{"version":3,"sources":["ShortMergeRequest.ts"],"names":["ShortMergeRequest","constructor","properties","forEach","callback","entries","map","Object"],"mappings":";;;;;;;;;AAEO,MAAMA,iBAAN,CAAwB;AAE7BC,EAAAA,WAAW,CAACC,UAAD,EAAmC;AAAA;;AAC5C,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;AAEDC,EAAAA,OAAO,CAACC,QAAD,EAAoD;AACzD,SAAKC,OAAL,GAAeF,OAAf,CAAuBC,QAAvB;AACD;;AAEDE,EAAAA,GAAG,CAAIF,QAAJ,EAAoD;AACrD,WAAO,KAAKC,OAAL,GAAeC,GAAf,CAAmBF,QAAnB,CAAP;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKH,UAAL,IAAmB,IAAvB,EAA6B;AAC3B,aAAO,EAAP;AACD;;AACD,WAAOK,MAAM,CAACF,OAAP,CAAe,KAAKH,UAApB,CAAP;AACD;;AAnB4B","sourcesContent":["import { CSSProperties } from './processor-types';\n\nexport class ShortMergeRequest {\n  public readonly properties: CSSProperties | null;\n  constructor(properties: CSSProperties | null) {\n    this.properties = properties;\n  }\n\n  forEach(callback: (record: CSSProperties[number]) => void) {\n    this.entries().forEach(callback);\n  }\n\n  map<T>(callback: (record: CSSProperties[number]) => T) {\n    return this.entries().map(callback);\n  }\n\n  entries() {\n    if (this.properties == null) {\n      return [];\n    }\n    return Object.entries(this.properties);\n  }\n}\n"]}