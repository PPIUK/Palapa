{"version":3,"sources":["translate.ts"],"names":["mapNodeList","nodeList","parent","parentStyles","params","nextMap","i","child","translated","translateNode","node","nodeIndex","Number","push","bindChildren","children","elementModel","isOpaque","translateElement","tagName","sharedProps","context","domNode","modelRegistry","getElementModelFromTagName","TEmptyCtor","isUnregistered","isTranslatableTextual","length","TTextCtor","textNode","Text","phrasing","TPhrasingCtor","isTranslatableBlock","block","TBlockCtor","translateDocument","document","tdoc","TDocumentCtor","styles","baseStyles","parseChildren"],"mappings":"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","sourcesContent":["import { TNodeImpl, TNodeInit } from '../tree/tree-types';\nimport { Document } from 'domhandler';\nimport { TTextCtor } from '../tree/TTextCtor';\nimport { TPhrasingCtor } from '../tree/TPhrasingCtor';\nimport { TBlockCtor } from '../tree/TBlockCtor';\nimport { TDocumentCtor, TDocumentImpl } from '../tree/TDocumentImpl';\nimport { isDomElement, isDomText, Element, Node, Text } from '../dom/dom-utils';\nimport { TStyles } from '../styles/TStyles';\n\nimport { TEmptyCtor } from '../tree/TEmptyCtor';\nimport { DataFlowParams } from './types';\n\nexport function mapNodeList({\n  nodeList,\n  parent,\n  parentStyles,\n  params\n}: {\n  nodeList: Node[];\n  parentStyles?: TStyles;\n  parent: TNodeImpl | null;\n  params: DataFlowParams;\n}): TNodeImpl[] {\n  const nextMap: TNodeImpl[] = [];\n  for (const i in nodeList) {\n    const child = nodeList[i];\n    const translated = translateNode({\n      node: child,\n      parentStyles,\n      params,\n      nodeIndex: Number(i),\n      parent\n    });\n    if (translated) {\n      nextMap.push(translated);\n    }\n  }\n  return nextMap;\n}\n\nexport function bindChildren(\n  node: TNodeImpl,\n  children: Node[],\n  params: DataFlowParams\n) {\n  if (!node.elementModel || !node.elementModel.isOpaque) {\n    node.bindChildren(\n      mapNodeList({\n        nodeList: children,\n        parent: node,\n        params\n      })\n    );\n  }\n}\n\nfunction translateElement({\n  node,\n  nodeIndex,\n  params,\n  parent,\n  parentStyles\n}: TranslateParams<Element>): TNodeImpl | null {\n  const tagName = node.tagName;\n  const sharedProps: Omit<TNodeInit, 'contentModel' | 'elementModel'> = {\n    nodeIndex,\n    parentStyles,\n    context: params,\n    domNode: node,\n    parent\n  };\n  const elementModel = params.modelRegistry.getElementModelFromTagName(tagName);\n  if (!elementModel) {\n    return new TEmptyCtor({\n      ...sharedProps,\n      isUnregistered: true,\n      elementModel,\n      domNode: node\n    });\n  }\n  if (elementModel.isTranslatableTextual()) {\n    if (node.children.length === 1) {\n      const child = node.children[0] as Node;\n      if (isDomText(child)) {\n        return new TTextCtor({\n          ...sharedProps,\n          elementModel,\n          textNode: child,\n          domNode: node\n        });\n      }\n    } else if (node.children.length === 0) {\n      return new TTextCtor({\n        ...sharedProps,\n        elementModel,\n        domNode: node,\n        textNode: new Text('')\n      });\n    }\n    const phrasing = new TPhrasingCtor({\n      ...sharedProps,\n      domNode: node,\n      elementModel\n    });\n    bindChildren(phrasing, node.children, params);\n    return phrasing;\n  }\n  if (elementModel.isTranslatableBlock()) {\n    const block = new TBlockCtor({\n      ...sharedProps,\n      elementModel,\n      parentStyles,\n      domNode: node\n    });\n    bindChildren(block, node.children, params);\n    return block;\n  }\n  return new TEmptyCtor({\n    ...sharedProps,\n    isUnregistered: false,\n    elementModel,\n    domNode: node\n  });\n}\n\ninterface TranslateParams<T = Node> {\n  node: T;\n  params: DataFlowParams;\n  parent: TNodeImpl | null;\n  parentStyles?: TStyles;\n  nodeIndex?: number;\n}\n\nexport function translateNode({\n  node,\n  parentStyles,\n  params,\n  nodeIndex,\n  parent\n}: TranslateParams<Node | null>): TNodeImpl | null {\n  if (isDomText(node)) {\n    return new TTextCtor({\n      textNode: node,\n      context: params,\n      parentStyles,\n      domNode: null,\n      elementModel: null,\n      nodeIndex,\n      parent\n    });\n  }\n  if (isDomElement(node)) {\n    return translateElement({\n      node,\n      parentStyles,\n      params,\n      nodeIndex,\n      parent\n    });\n  }\n  return null;\n}\n\nexport function translateDocument(\n  document: Document,\n  params: DataFlowParams\n): TDocumentImpl {\n  const tdoc = new TDocumentCtor({\n    context: params,\n    styles: params.baseStyles,\n    domNode: document as any\n  });\n  bindChildren(tdoc, document.children, params);\n  tdoc.parseChildren();\n  return tdoc;\n}\n"]}