{"version":3,"sources":["tnodeSnapshot.ts"],"names":["printTableStyles","styles","entries","Object","reduce","prev","name","val","JSON","stringify","tnodePropertiesString","tnode","withNodeIndex","withStyles","tagPrint","tagName","unregisteredPrint","isUnregistered","indexPrint","nodeIndex","idPrint","id","classesPrint","classes","length","join","dataPrint","type","data","anchorPrint","attributes","href","srcPrint","src","pstyles","getNativeStyles","nativeStylesPrint","oStyles","getWebStyles","webStylesPrint","detailsPrint","filter","p","displayName","tnodeSnapshot","params","parentLeftPrefix","isChild","isLast","prefix","totalPrefixLeft","childrenPrint","children","map","c","i","padStart"],"mappings":"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","sourcesContent":["import { TNode, TNodePrintOptions } from './tree-types';\n\nfunction printTableStyles(styles: Record<string, any>) {\n  const entries = Object.entries(styles);\n  return entries.reduce((prev, [name, val]) => {\n    return `${prev}${prev ? ',' : ''} ${name}: ${JSON.stringify(val)}`;\n  }, '');\n}\n\nfunction tnodePropertiesString(\n  tnode: TNode,\n  { withNodeIndex, withStyles }: TNodePrintOptions\n) {\n  const tagPrint = tnode.tagName ? `tagName=\"${tnode.tagName}\"` : 'anonymous';\n  const unregisteredPrint = tnode.isUnregistered ? 'unregistered' : null;\n  const indexPrint = withNodeIndex ? `nodeIndex={${tnode.nodeIndex}}` : null;\n  const idPrint = tnode.id ? `id=${tnode.id}` : null;\n  const classesPrint = tnode.classes?.length\n    ? `classes={[${tnode.classes.join(', ')}]}`\n    : null;\n  const dataPrint =\n    tnode.type === 'text' ? `data=${JSON.stringify(tnode.data)}` : null;\n  const anchorPrint =\n    typeof tnode.attributes.href === 'string'\n      ? `href=${JSON.stringify(tnode.attributes.href)}`\n      : null;\n  const srcPrint =\n    typeof tnode.attributes.src === 'string'\n      ? `src=${JSON.stringify(tnode.attributes.src)}`\n      : null;\n  const pstyles = withStyles ? printTableStyles(tnode.getNativeStyles()) : null;\n  const nativeStylesPrint = pstyles ? `nativeStyles={{${pstyles} }}` : null;\n  const oStyles = withStyles ? printTableStyles(tnode.getWebStyles()) : null;\n  const webStylesPrint = oStyles ? `webStyles={{${oStyles}}}` : null;\n  const detailsPrint = [\n    tagPrint,\n    unregisteredPrint,\n    indexPrint,\n    idPrint,\n    classesPrint,\n    dataPrint,\n    anchorPrint,\n    srcPrint,\n    nativeStylesPrint,\n    webStylesPrint\n  ]\n    .filter((p) => p !== null)\n    .join(' ');\n  return `<${tnode.displayName} ${detailsPrint}`;\n}\n\ninterface TNodePrintState {\n  parentLeftPrefix: string;\n  isChild: boolean;\n  isLast: boolean;\n}\n\nexport default function tnodeSnapshot(\n  tnode: TNode,\n  params: Partial<TNodePrintState> & TNodePrintOptions\n): string {\n  const {\n    parentLeftPrefix = '',\n    isChild = false,\n    isLast = true,\n    withStyles,\n    withNodeIndex\n  } = params;\n  const prefix = isChild ? '  ' : '';\n  const totalPrefixLeft = parentLeftPrefix + prefix;\n  const childrenPrint = tnode.children\n    .map((c, i) =>\n      tnodeSnapshot(c, {\n        parentLeftPrefix: parentLeftPrefix + ''.padStart(prefix.length, ' '),\n        isChild: true,\n        isLast: i === tnode.children.length - 1,\n        withStyles,\n        withNodeIndex\n      })\n    )\n    .join('');\n  return `${totalPrefixLeft}${tnodePropertiesString(tnode, {\n    withStyles,\n    withNodeIndex\n  })}${\n    childrenPrint\n      ? `>\\n${childrenPrint}\\n${totalPrefixLeft}</${tnode.displayName}>`\n      : ' />'\n  }${isLast ? '' : '\\n'}`;\n}\n"]}