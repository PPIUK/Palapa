{"version":3,"sources":["TNodeCtor.ts"],"names":["updateNodeIndexes","node","i","nodeIndex","emptyAttrs","Object","freeze","emptyClasses","findNativeRole","ariaRole","setMarkersFromAttributes","targetMarkers","_parentMarkers","attributes","direction","dir","lang","transformPropsDefinitionsToSwitch","definition","text","native","view","mergeSwitches","prev","next","prototype","children","init","classes","styles","TStyles","empty","markers","markersPrototype","__nodeIndex","__trimmedLeft","__trimmedRight","__nativeProps","__nativeStyles","__webStyles","__generateNativePropsFromTNode","ret","webTextFlow","userSelect","selectable","accessibilityProps","accessibilityLabel","role","accessibilityRole","__generateDynamicNativePropsFromModel","autoGeneratedProps","elm","elementModel","getReactNativeProps","domNode","attribs","hasWhiteSpaceCollapsingEnabled","whiteSpace","contentModel","parentStyles","parent","id","tagName","name","isUnregistered","bindChildren","shouldUpdateNodeIndexes","forEach","cloneInitParams","partial","assign","isCollapsibleLeft","length","isCollapsibleRight","isEmpty","trimLeft","firstChild","splice","trimRight","lastChild","matchContentModel","spliceChildren","indexesToSplice","offset","collapse","collapseChildren","getNativeStyles","nativeBlockFlow","nativeBlockRet","nativeTextFlow","nativeTextRet","getWebStyles","webBlockRet","snapshot","options","withStyles","withNodeIndex","hasClass","className","indexOf","toString","setMarkers","parentMarkers","setMarkersForTNode","context","staticFromModel","reactNativeProps","dynamicFromAttrs","dynamicFromModel","initialize","class","split","extend","keys","stylesMerger","buildStyles","style","TNodeCtor","TNode","type","displayName","extraAccessors","defineProperties"],"mappings":"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","sourcesContent":["import { AccessibilityProps, AccessibilityRole } from 'react-native';\nimport {\n  ReactNativePropsSwitch,\n  ReactNativePropsDefinitions\n} from '../helper-types';\nimport { TStyles } from '../styles/TStyles';\nimport markersPrototype from './markersPrototype';\nimport tnodeToString from './tnodeSnapshot';\nimport {\n  Markers,\n  TNodeDescriptor,\n  TNodeImpl,\n  TNodeInit,\n  TNodeType\n} from './tree-types';\n\nexport type GenericTNodeCtor<Init = TNodeInit, Impl = TNodeImpl> = {\n  new (init: Init): Impl;\n  prototype: Impl;\n};\n\nexport type Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nfunction updateNodeIndexes(node: Mutable<TNodeImpl>, i: number) {\n  node.nodeIndex = i;\n}\n\nconst emptyAttrs = Object.freeze({});\nconst emptyClasses = Object.freeze([]);\n\nfunction findNativeRole(ariaRole: string): AccessibilityRole | undefined {\n  if (ariaRole === 'img') {\n    return 'image';\n  }\n  if (ariaRole === 'heading') {\n    return 'header';\n  }\n  if (ariaRole === 'dialog') {\n    return 'alert';\n  }\n  if (ariaRole === 'presentation') {\n    return 'none';\n  }\n  if (\n    ariaRole === 'button' ||\n    ariaRole === 'switch' ||\n    ariaRole === 'checkbox' ||\n    ariaRole === 'radio' ||\n    ariaRole === 'radiogroup' ||\n    ariaRole === 'link' ||\n    ariaRole === 'search'\n  ) {\n    return ariaRole;\n  }\n}\n\nfunction setMarkersFromAttributes(\n  targetMarkers: Markers,\n  _parentMarkers: Readonly<Markers>,\n  { attributes }: TNodeDescriptor\n): void {\n  if ('dir' in attributes) {\n    targetMarkers.direction = attributes.dir as 'rtl';\n  }\n  if ('lang' in attributes) {\n    targetMarkers.lang = attributes.lang;\n  }\n}\n\nfunction transformPropsDefinitionsToSwitch(\n  definition?: ReactNativePropsDefinitions | null\n): ReactNativePropsSwitch | null {\n  if (!definition) {\n    return null;\n  }\n  return {\n    text: {\n      ...definition.native,\n      ...definition.text\n    },\n    view: {\n      ...definition.native,\n      ...definition.view\n    }\n  };\n}\n\nfunction mergeSwitches(\n  prev: ReactNativePropsSwitch | null,\n  next: ReactNativePropsSwitch | null\n) {\n  if (!prev) {\n    return next;\n  }\n  if (!next) {\n    return prev;\n  }\n  return {\n    text: {\n      ...prev.text,\n      ...next.text\n    },\n    view: {\n      ...prev.view,\n      ...next.view\n    }\n  };\n}\n\nconst prototype: Omit<TNodeImpl, 'displayName' | 'type'> = {\n  children: Object.freeze([]) as any,\n  init: Object.freeze({}) as any,\n  classes: Object.freeze([]) as any,\n  styles: Object.freeze(TStyles.empty()) as any,\n  markers: markersPrototype,\n  __nodeIndex: null,\n  __trimmedLeft: false,\n  __trimmedRight: false,\n  __nativeProps: false,\n  __nativeStyles: false,\n  __webStyles: false,\n  __generateNativePropsFromTNode() {\n    let ret: ReactNativePropsSwitch | null = null;\n    if (this.styles.webTextFlow.userSelect) {\n      ret = mergeSwitches(ret, {\n        text: {\n          selectable: this.styles.webTextFlow.userSelect !== 'none'\n        }\n      });\n    }\n    if (this.attributes['aria-label']) {\n      const accessibilityProps: AccessibilityProps = {\n        accessibilityLabel: this.attributes['aria-label']\n      };\n      ret = mergeSwitches(ret, {\n        view: accessibilityProps,\n        text: accessibilityProps\n      });\n    }\n    if (this.attributes.role) {\n      const role = this.attributes.role;\n      const accessibilityRole = findNativeRole(role);\n      if (accessibilityRole) {\n        const accessibilityProps: AccessibilityProps = {\n          accessibilityRole: accessibilityRole\n        };\n        ret = mergeSwitches(ret, {\n          view: accessibilityProps,\n          text: accessibilityProps\n        });\n      }\n    }\n    return ret;\n  },\n\n  __generateDynamicNativePropsFromModel(autoGeneratedProps) {\n    const elm = this.elementModel;\n    if (!elm || !elm.getReactNativeProps) {\n      return null;\n    }\n    return transformPropsDefinitionsToSwitch(\n      elm.getReactNativeProps(this as any, autoGeneratedProps, this.domNode!) ||\n        null\n    );\n  },\n\n  get attributes() {\n    return this.domNode?.attribs || emptyAttrs;\n  },\n\n  get hasWhiteSpaceCollapsingEnabled() {\n    return typeof this.styles.webTextFlow.whiteSpace === 'string'\n      ? this.styles.webTextFlow.whiteSpace === 'normal'\n      : true;\n  },\n\n  get contentModel() {\n    return this.elementModel?.contentModel || null;\n  },\n\n  get parentStyles() {\n    return this.init.parentStyles || this.parent?.styles || null;\n  },\n\n  get id() {\n    return this.attributes.id || null;\n  },\n\n  get domNode() {\n    return this.init.domNode || null;\n  },\n\n  get elementModel() {\n    return this.init.elementModel;\n  },\n\n  get tagName() {\n    return this.init.domNode?.name || null;\n  },\n\n  get parent() {\n    return (this.init.parent as any) || null;\n  },\n\n  get nodeIndex() {\n    if (this.__nodeIndex === null) {\n      this.__nodeIndex = this.init.nodeIndex || 0;\n    }\n    return this.__nodeIndex;\n  },\n\n  get isUnregistered() {\n    return this.init.isUnregistered || false;\n  },\n\n  set nodeIndex(nodeIndex: number) {\n    this.__nodeIndex = nodeIndex;\n  },\n\n  bindChildren(children, shouldUpdateNodeIndexes = false) {\n    //@ts-ignore\n    this.children = children;\n    if (shouldUpdateNodeIndexes) {\n      children.forEach(updateNodeIndexes);\n    }\n  },\n\n  cloneInitParams(partial) {\n    return Object.assign({}, this.init, partial) as any;\n  },\n\n  isCollapsibleLeft() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[0].isCollapsibleLeft()\n      );\n    }\n    return false;\n  },\n\n  isCollapsibleRight() {\n    if (this.children.length) {\n      return (\n        this.hasWhiteSpaceCollapsingEnabled &&\n        this.children[this.children.length - 1].isCollapsibleRight()\n      );\n    }\n    return false;\n  },\n\n  isEmpty() {\n    return false;\n  },\n\n  trimLeft() {\n    if (!this.__trimmedLeft && this.children.length) {\n      const firstChild = this.children[0];\n      firstChild.trimLeft();\n      if (firstChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(0, 1);\n      }\n      this.__trimmedLeft = true;\n    }\n  },\n\n  trimRight() {\n    if (!this.__trimmedRight && this.children.length) {\n      const lastChild = this.children[this.children.length - 1];\n      lastChild.trimRight();\n      if (lastChild.isEmpty()) {\n        //@ts-ignore\n        this.children.splice(-1, 1);\n      }\n      this.__trimmedRight = true;\n    }\n  },\n\n  matchContentModel() {\n    return false;\n  },\n\n  spliceChildren(indexesToSplice) {\n    let offset = 0;\n    for (const i of indexesToSplice) {\n      //@ts-ignore\n      this.children.splice(i - offset, 1);\n      offset += 1;\n    }\n  },\n\n  collapse() {\n    this.collapseChildren();\n    this.bindChildren(this.children, true);\n  },\n\n  getNativeStyles() {\n    if (this.__nativeStyles === false) {\n      this.__nativeStyles = {\n        ...this.styles.nativeBlockFlow,\n        ...this.styles.nativeBlockRet,\n        ...this.styles.nativeTextFlow,\n        ...this.styles.nativeTextRet\n      };\n    }\n    return this.__nativeStyles;\n  },\n\n  getWebStyles() {\n    if (this.__webStyles === false) {\n      this.__webStyles = {\n        ...this.styles.webTextFlow,\n        ...this.styles.webBlockRet\n      } as ReturnType<TNodeImpl['getWebStyles']>;\n    }\n    return this.__webStyles;\n  },\n\n  collapseChildren() {\n    return;\n  },\n\n  snapshot(options = {}) {\n    const { withStyles = false, withNodeIndex = false } = options;\n    return tnodeToString(this as any, { withStyles, withNodeIndex });\n  },\n\n  hasClass(className) {\n    return this.classes.indexOf(className) > -1;\n  },\n\n  toString() {\n    return this.snapshot();\n  },\n\n  setMarkers(targetMarkers, parentMarkers) {\n    if (this.elementModel?.setMarkersForTNode) {\n      this.elementModel.setMarkersForTNode(targetMarkers, parentMarkers, this);\n    }\n    setMarkersFromAttributes(targetMarkers, parentMarkers, this);\n    this.init.context.setMarkersForTNode?.(targetMarkers, parentMarkers, this);\n  },\n\n  getReactNativeProps() {\n    if (this.__nativeProps === false) {\n      const staticFromModel = transformPropsDefinitionsToSwitch(\n        this.elementModel?.reactNativeProps\n      );\n      const dynamicFromAttrs = this.__generateNativePropsFromTNode();\n      const autoGeneratedProps = mergeSwitches(\n        staticFromModel,\n        dynamicFromAttrs\n      );\n      const dynamicFromModel =\n        this.__generateDynamicNativePropsFromModel(autoGeneratedProps);\n      this.__nativeProps = mergeSwitches(autoGeneratedProps, dynamicFromModel);\n    }\n    return this.__nativeProps;\n  },\n\n  initialize<Impl extends TNodeImpl<TNodeInit> = TNodeImpl>(\n    this: Mutable<Impl>,\n    init: Impl['init']\n  ) {\n    this.init = init;\n    this.classes = this.attributes.class?.split(/\\s+/) || emptyClasses;\n    const parentMarkers = init.parent\n      ? init.parent.markers\n      : markersPrototype.extend();\n    this.markers = parentMarkers.extend();\n    this.setMarkers(this.markers, parentMarkers, this);\n    // Avoid very long prototype chains by assigning parent to current\n    // when current has no own properties\n    if (Object.keys(this.markers).length === 0) {\n      this.markers = parentMarkers;\n    }\n    this.styles =\n      init.styles ||\n      init.context.stylesMerger.buildStyles(\n        this.attributes.style,\n        this.parentStyles || null,\n        this\n      );\n  }\n};\n\nconst TNodeCtor = function TNode<Impl extends TNodeImpl = TNodeImpl>(\n  this: Mutable<TNodeImpl>,\n  type: TNodeType,\n  displayName: string,\n  extraAccessors?: {\n    [k in Exclude<keyof Impl, keyof TNodeImpl>]: {\n      get: () => any;\n      set?: (val: any) => void;\n    };\n  }\n) {\n  this.type = type;\n  this.displayName = displayName;\n  extraAccessors && Object.defineProperties(this, extraAccessors);\n};\n\nTNodeCtor.prototype = prototype as any;\n\nexport default TNodeCtor;\n"]}