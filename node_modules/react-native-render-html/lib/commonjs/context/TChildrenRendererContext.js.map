{"version":3,"sources":["TChildrenRendererContext.ts"],"names":["TChildrenRenderersContext","React","createContext","TChildrenRenderer","TNodeChildrenRenderer","useTNodeChildrenRenderer","useContext","useTChildrenRenderer"],"mappings":";;;;;;;;;AAAA;;;;AAIA;AACA;AACA;AACA,MAAMA,yBAAyB,gBAAGC,eAAMC,aAAN,CAG/B;AACDC,EAAAA,iBAAiB,EAAE,IADlB;AAEDC,EAAAA,qBAAqB,EAAE;AAFtB,CAH+B,CAAlC;;AAQO,SAASC,wBAAT,GAAoC;AACzC,SAAOJ,eAAMK,UAAN,CAAiBN,yBAAjB,EAA4CI,qBAAnD;AACD;;AAEM,SAASG,oBAAT,GAAgC;AACrC,SAAON,eAAMK,UAAN,CAAiBN,yBAAjB,EAA4CG,iBAAnD;AACD;;eAEcH,yB","sourcesContent":["import React from 'react';\nimport type TNodeChildrenRenderer from '../TNodeChildrenRenderer';\nimport type TChildrenRenderer from '../TChildrenRenderer';\n\n/**\n * This context allows dependency injection to avoid circular dependencies.\n */\nconst TChildrenRenderersContext = React.createContext<{\n  TChildrenRenderer: typeof TChildrenRenderer;\n  TNodeChildrenRenderer: typeof TNodeChildrenRenderer;\n}>({\n  TChildrenRenderer: null as any,\n  TNodeChildrenRenderer: null as any\n});\n\nexport function useTNodeChildrenRenderer() {\n  return React.useContext(TChildrenRenderersContext).TNodeChildrenRenderer;\n}\n\nexport function useTChildrenRenderer() {\n  return React.useContext(TChildrenRenderersContext).TChildrenRenderer;\n}\n\nexport default TChildrenRenderersContext;\n"]}