{"version":3,"sources":["ListStyleSpecsProvider.tsx"],"names":["listStyleSpecsContext","defaultListStyleSpecs","useListStyleSpecs","createSymbolicMarkerRenderer","Component","counterStyleRenderer","prefix","renderPrefix","suffix","renderSuffix","style","markerTextStyle","counterIndex","rtlMarkerReversed","flexDirection","justifyContent","React","createElement","index","makeMarkerRenderers","value","type","renderMarker","ListStyleSpecsProvider","children","customListStyleSpecs","mergedListStyleSpecs"],"mappings":";;;;;;;;AAEA;;AACA;;AAMA;;AACA;;AAEA;;;;;;;;AAZA;AAcA,MAAMA,qBAAqB,gBAAG,0BAK5BC,8BAL4B,CAA9B;;AAOO,SAASC,iBAAT,GAA6B;AAClC,SAAO,uBAAWF,qBAAX,CAAP;AACD;;AAED,SAASG,4BAAT,CAAsC;AACpCC,EAAAA,SADoC;AAEpCC,EAAAA;AAFoC,CAAtC,EAGyB;AACvB,QAAMC,MAAM,GAAGD,oBAAoB,CAACE,YAArB,EAAf;AACA,QAAMC,MAAM,GAAGH,oBAAoB,CAACI,YAArB,EAAf;AACA,SAAO,CAAC;AACNC,IAAAA,KADM;AAENC,IAAAA,eAFM;AAGNC,IAAAA,YAHM;AAINC,IAAAA;AAJM,GAAD,KAKe;AACpB,wBACE,6BAAC,iBAAD;AACE,MAAA,KAAK,EAAE,CACLH,KADK,EAEL;AACEI,QAAAA,aAAa,EAAED,iBAAiB,GAAG,aAAH,GAAmB,KADrD;AAEEE,QAAAA,cAAc,EAAE;AAFlB,OAFK;AADT,OAQG,CAAC,CAACT,MAAF,iBAAY,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEK;AAAb,OAA+BL,MAA/B,CARf,eASGU,eAAMC,aAAN,CAAoBb,SAApB,EAA+B,EAC9B,GAAIO,eAD0B;AAE9BO,MAAAA,KAAK,EAAEN;AAFuB,KAA/B,CATH,EAaG,CAAC,CAACJ,MAAF,iBAAY,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAEG;AAAb,OAA+BH,MAA/B,CAbf,CADF;AAiBD,GAvBD;AAwBD;;AAED,MAAMW,mBAAmB,GAAG,0BAAeC,KAAD,IAA0B;AAClE,MAAIA,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AAC5B,WAAO,EACL,GAAGD,KADE;AAELE,MAAAA,YAAY,EAAEnB,4BAA4B,CAACiB,KAAD;AAFrC,KAAP;AAID;;AACD,SAAOA,KAAP;AACD,CAR2B,CAA5B;;AAUe,SAASG,sBAAT,CAAgC;AAC7CC,EAAAA;AAD6C,CAAhC,EAEW;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAA2B,0CAAjC;AACA,QAAMC,oBAAoB,GAAG,oBAAQ,MAAM;AACzC,WAAOP,mBAAmB,CACxBM,oBAAoB,IAAI,IAAxB,GACI,EAAE,GAAGxB,8BAAL;AAA4B,SAAGwB;AAA/B,KADJ,GAEIxB,8BAHoB,CAA1B;AAKD,GAN4B,EAM1B,CAACwB,oBAAD,CAN0B,CAA7B;AAOA,sBACE,6BAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEC;AAAvC,KACGF,QADH,CADF;AAKD","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport { MarkerBoxProps } from '@jsamr/react-native-li';\nimport { mapObjIndexed } from 'ramda';\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useMemo\n} from 'react';\nimport { Text, View } from 'react-native';\nimport defaultListStyleSpecs from '../elements/defaultListStyleSpecs';\nimport { ListStyleSpec, UnitaryListStyleSpec } from '../shared-types';\nimport { useSharedProps } from './SharedPropsProvider';\n\nconst listStyleSpecsContext = createContext<\n  Record<\n    string,\n    ListStyleSpec & { renderMarker?: (props: MarkerBoxProps) => any }\n  >\n>(defaultListStyleSpecs);\n\nexport function useListStyleSpecs() {\n  return useContext(listStyleSpecsContext);\n}\n\nfunction createSymbolicMarkerRenderer({\n  Component,\n  counterStyleRenderer\n}: UnitaryListStyleSpec) {\n  const prefix = counterStyleRenderer.renderPrefix();\n  const suffix = counterStyleRenderer.renderSuffix();\n  return ({\n    style,\n    markerTextStyle,\n    counterIndex,\n    rtlMarkerReversed\n  }: MarkerBoxProps) => {\n    return (\n      <View\n        style={[\n          style,\n          {\n            flexDirection: rtlMarkerReversed ? 'row-reverse' : 'row',\n            justifyContent: 'flex-end'\n          }\n        ]}>\n        {!!prefix && <Text style={markerTextStyle}>{prefix}</Text>}\n        {React.createElement(Component, {\n          ...(markerTextStyle as any),\n          index: counterIndex\n        })}\n        {!!suffix && <Text style={markerTextStyle}>{suffix}</Text>}\n      </View>\n    );\n  };\n}\n\nconst makeMarkerRenderers = mapObjIndexed((value: ListStyleSpec) => {\n  if (value.type === 'unitary') {\n    return {\n      ...value,\n      renderMarker: createSymbolicMarkerRenderer(value)\n    };\n  }\n  return value;\n});\n\nexport default function ListStyleSpecsProvider({\n  children\n}: PropsWithChildren<{}>) {\n  const { customListStyleSpecs } = useSharedProps();\n  const mergedListStyleSpecs = useMemo(() => {\n    return makeMarkerRenderers(\n      customListStyleSpecs != null\n        ? { ...defaultListStyleSpecs, ...customListStyleSpecs }\n        : defaultListStyleSpecs\n    );\n  }, [customListStyleSpecs]);\n  return (\n    <listStyleSpecsContext.Provider value={mergedListStyleSpecs}>\n      {children}\n    </listStyleSpecsContext.Provider>\n  );\n}\n"]}