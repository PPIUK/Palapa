{"version":3,"sources":["index.ts"],"names":["RenderHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAqHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;;AACA;;AAIA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AAGA;;AAIA;;AACA;;AACA;;AACA;;AAIA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;;;;;;;eApDeA,mB","sourcesContent":["import RenderHTML from './RenderHTML';\nexport {\n  defaultHTMLElementModels,\n  isDomElement,\n  isDomText,\n  Document,\n  Element,\n  Node,\n  Text,\n  NodeWithChildren,\n  HTMLContentModel,\n  HTMLElementModel,\n  TRenderEngine\n} from '@native-html/transient-render-engine';\nexport type {\n  AnchorTagName,\n  AttribTagNames,\n  CSSAbsoluteHardcodedFontSize,\n  CSSAbsoluteLengthUnit,\n  CSSAbsoluteLengthUnitsMultiplicators,\n  CSSDisplayRegistry,\n  CSSFlattenProcessedTypes,\n  CSSFlowedPropKey,\n  CSSHardcodedBorderWidth,\n  CSSLengthUnit,\n  CSSListStyleTypePropertyBase,\n  CSSLongNativeBlockPropKey,\n  CSSLongNativeTextPropKey,\n  CSSLongNativeTranslatableBlockFlowedPropKey,\n  CSSLongNativeTranslatableBlockPropKey,\n  CSSLongNativeTranslatableBlockRetainedPropKey,\n  CSSLongNativeTranslatableTextFlowedPropKey,\n  CSSLongNativeTranslatableTextPropKey,\n  CSSLongNativeTranslatableTextRetainedPropKey,\n  CSSLongNativeUntranslatableBlockFlowedPropKey,\n  CSSLongNativeUntranslatableBlockPropKey,\n  CSSLongNativeUntranslatableBlockRetainedPropKey,\n  CSSLongNativeUntranslatableTextFlowedPropKey,\n  CSSLongNativeUntranslatableTextPropKey,\n  CSSLongNativeUntranslatableTextRetainedPropKey,\n  CSSLongWebTextFlowedPropKey,\n  CSSLongWebTextRetainedPropKey,\n  CSSNativePropKey,\n  CSSProcessorConfig,\n  CSSPropagationRegistry,\n  CSSProperties,\n  CSSPropertyCompatCategory,\n  CSSPropertyDisplayCategory,\n  CSSPropertyNameList,\n  CSSPropertyPropagationCategory,\n  CSSPropertySpecs,\n  CSSRelativeHarcodedFontSize,\n  CSSShortBlockPropKey,\n  CSSShortNativeTranslatableBlockPropKey,\n  CSSShortPropsKey,\n  CSSShortTextPropKey,\n  CustomElementModel,\n  DefaultHTMLElementModelsStatic,\n  DocumentContext,\n  DomVisitorCallbacks,\n  EditsTagNames,\n  ElementCategory,\n  ElementModelBase,\n  EmbeddedTagNames,\n  ExtendedNativeViewStyleKeys,\n  ExtraNativeLongViewStyleKeys,\n  ExtraNativeShortStyle,\n  ExtraNativeShortViewStyleKeys,\n  ExtraNativeTextStyle,\n  ExtraNativeTextStyleKeys,\n  ExtraNativeUntranslatedLongStyles,\n  ExtraNativeViewStyle,\n  GroupingTagNames,\n  HTMLElementModelShape,\n  HTMLModelRecord,\n  InteractiveTagNames,\n  Markers,\n  MetadataTagNames,\n  MixedSizeCSSPropertiesKeys,\n  MixedStyleDeclaration,\n  MixedStyleRecord,\n  NativeBlockStyles,\n  NativeDirectionalStyleKeys,\n  NativeElementModel,\n  NativeShortKeys,\n  NativeTextStyleKey,\n  NativeTextStyles,\n  ReactNativeProps,\n  ReactNativePropsDefinitions,\n  ReactNativePropsSwitch,\n  SectioningTagNames,\n  SetMarkersForTNode,\n  StylesConfig,\n  StylessReactNativeProps,\n  StylessReactNativeTextProps,\n  StylessReactNativeViewProps,\n  TabularTagNames,\n  TagName,\n  TBlock,\n  TDocument,\n  TEmpty,\n  TextLevelTagNames,\n  TNode,\n  TNodeDescriptor,\n  TNodePrintOptions,\n  TNodeShape,\n  TNodeType,\n  TPhrasing,\n  TRenderEngineOptions,\n  TStylesShape,\n  TText,\n  UnsupportedTagNames,\n  UntranslatableTagNames,\n  WebBlockRetainProperties,\n  WebBlockStyles,\n  WebTextFlowProperties,\n  WebTextStyles\n} from '@native-html/transient-render-engine';\nexport * from './shared-types';\nexport * from './render/render-types';\nexport { RenderHTML };\nexport default RenderHTML;\nexport { default as TChildrenRenderer } from './TChildrenRenderer';\nexport {\n  default as TNodeChildrenRenderer,\n  useTNodeChildrenProps\n} from './TNodeChildrenRenderer';\nexport { default as TNodeRenderer } from './TNodeRenderer';\nexport {\n  default as TRenderEngineProvider,\n  defaultFallbackFonts,\n  useAmbientTRenderEngine\n} from './TRenderEngineProvider';\nexport { default as RenderHTMLConfigProvider } from './RenderHTMLConfigProvider';\nexport { default as RenderHTMLSource } from './RenderHTMLSource';\nexport { default as useInternalRenderer } from './hooks/useInternalRenderer';\nexport { default as useNormalizedUrl } from './hooks/useNormalizedUrl';\nexport { default as getNativePropsForTNode } from './helpers/getNativePropsForTNode';\nexport { default as collapseTopMarginForChild } from './helpers/collapseTopMarginForChild';\nexport type {\n  InternalSpecialRenderedTag,\n  InternalRendererConfig\n} from './hooks/useInternalRenderer';\n\n// HELPERS\nexport { default as splitBoxModelStyle } from './helpers/splitBoxModelStyle';\nexport { default as buildTREFromConfig } from './helpers/buildTREFromConfig';\n\n// HOOKS\nexport {\n  useComputeMaxWidthForTag,\n  useSharedProps\n} from './context/SharedPropsProvider';\nexport { useRendererProps } from './context/RenderersPropsProvider';\nexport { useDocumentMetadata } from './context/DocumentMetadataProvider';\nexport { default as useContentWidth } from './hooks/useContentWidth';\nexport { default as domNodeToHTMLString } from './helpers/domNodeToHTMLString';\nexport type { DomNodeToHtmlReporter } from './helpers/domNodeToHTMLString';\n\n// DEFAULTS\nexport { default as defaultSystemFonts } from './defaultSystemFonts';\nexport { default as defaultListStyleSpecs } from './elements/defaultListStyleSpecs';\n\n// IMG\nexport { default as useIMGElementState } from './elements/useIMGElementState';\nexport { default as useIMGElementStateWithCache } from './elements/useIMGElementStateWithCache';\nexport { default as IMGElement } from './elements/IMGElement';\nexport { default as IMGElementContainer } from './elements/IMGElementContainer';\nexport { default as IMGElementContentError } from './elements/IMGElementContentError';\nexport { default as IMGElementContentLoading } from './elements/IMGElementContentLoading';\nexport { default as IMGElementContentSuccess } from './elements/IMGElementContentSuccess';\nexport { default as IMGElementContentAlt } from './elements/IMGElementContentAlt';\nexport * from './elements/img-types';\nexport { useIMGElementProps } from './renderers/IMGRenderer';\n"]}