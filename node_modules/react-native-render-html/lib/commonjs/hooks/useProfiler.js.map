{"version":3,"sources":["useProfiler.ts"],"names":["useProfiler","__DEV__","performance","name","prop","lastUpdate","profile","onUpdate","now","diff","current","console","warn","toFixed","identity"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIA,MAAMA,WAAW,GACf,OAAOC,OAAP,KAAmB,SAAnB,IAAgCA,OAAhC,IAA2C,OAAOC,WAAP,KAAuB,QAAlE,GACI,SAASF,WAAT,CAAqB;AAAEG,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAAuE;AACrE,QAAMC,UAAU,GAAG,mBAAO,CAAP,CAAnB;AACA,QAAMC,OAAO,GAAG,wBACd,SAASC,QAAT,GAAoB;AAClB,UAAMC,GAAG,GAAGN,WAAW,CAACM,GAAZ,EAAZ;AACA,UAAMC,IAAI,GAAGD,GAAG,GAAGH,UAAU,CAACK,OAA9B;;AACA,QAAID,IAAI,GAAG,EAAX,EAAe;AACbE,MAAAA,OAAO,CAACC,IAAR,CACG,sBACCR,IAAI,GAAI,OAAMA,IAAK,UAAf,GAA2B,OAChC,YACCD,IAAI,GAAGA,IAAH,GAAU,YACf,wFAAuFM,IAAI,CAACI,OAAL,CACtF,CADsF,CAEtF,2DAPJ;AASD;;AACDR,IAAAA,UAAU,CAACK,OAAX,GAAqBF,GAArB;AACD,GAhBa,EAiBd,CAACL,IAAD,EAAOC,IAAP,CAjBc,CAAhB;AAmBA,SAAOE,OAAP;AACD,CAvBL;AAwBI;AACA,SAASN,WAAT,GAAuB;AACrB,SAAOc,iBAAP;AACD,CA5BP;eA8Bed,W","sourcesContent":["import { useCallback, useRef } from 'react';\nimport identity from 'ramda/src/identity';\n\ndeclare const performance: { now: () => number };\n\nconst useProfiler =\n  typeof __DEV__ === 'boolean' && __DEV__ && typeof performance === 'object'\n    ? function useProfiler({ name, prop }: { name?: string; prop?: string }) {\n        const lastUpdate = useRef(0);\n        const profile = useCallback(\n          function onUpdate() {\n            const now = performance.now();\n            const diff = now - lastUpdate.current;\n            if (diff < 60) {\n              console.warn(\n                `You seem to update ${\n                  prop ? `the ${prop} prop(s)` : 'props'\n                } of the \"${\n                  name ? name : 'RenderHTML'\n                }\" component in short periods of time, causing costly tree rerenders (last update was ${diff.toFixed(\n                  2\n                )}ms ago). See https://stackoverflow.com/q/68966120/2779871`\n              );\n            }\n            lastUpdate.current = now;\n          },\n          [name, prop]\n        );\n        return profile;\n      }\n    : /* istanbul ignore next */\n      function useProfiler() {\n        return identity as () => void;\n      };\n\nexport default useProfiler;\n"]}