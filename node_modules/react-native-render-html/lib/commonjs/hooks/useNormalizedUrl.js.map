{"version":3,"sources":["useNormalizedUrl.ts"],"names":["useNormalizedUrl","initialUrl","baseUrl"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,gBAAT,CAA0BC,UAA1B,EAA8C;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAc,oDAApB;AACA,SAAO,uCAAyBD,UAAzB,EAAqCC,OAArC,CAAP;AACD","sourcesContent":["import { useDocumentMetadata } from '../context/DocumentMetadataProvider';\nimport normalizeResourceLocator from '../helpers/normalizeResourceLocator';\n\n/**\n * This hook transforms relative and protocol-relative URLs to absolute URLs as\n * per {@link https://tools.ietf.org/html/rfc1808 | RFC1808}. The base URL is\n * determined by the `<base />` element, `source.uri` or `source.baseUrl`.\n *\n * @remarks\n * - If there is no `baseUrl` and the initial URL is relative, this hook will\n *   return the initial URL.\n * - If the initial URL is absolute, this hook will return this initial URL.\n *\n * @param initialUrl - The URL before normalization.\n *\n * @public\n */\nexport default function useNormalizedUrl(initialUrl: string) {\n  const { baseUrl } = useDocumentMetadata();\n  return normalizeResourceLocator(initialUrl, baseUrl);\n}\n"]}