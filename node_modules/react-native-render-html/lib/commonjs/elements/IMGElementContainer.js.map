{"version":3,"sources":["IMGElementContainer.tsx"],"names":["styles","StyleSheet","create","container","flexDirection","alignSelf","justifyContent","IMGElementContainer","style","onPress","testID","children","otherProps","containerStyle","width","height","remainingStyle","Container","GenericPressable","View","React","createElement"],"mappings":";;;;;;;AAAA;;AAMA;;AACA;;;;;;;;AAGA,MAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,SAAS,EAAE,SAFF;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf;AAQA;AACA;AACA;;;AACe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,KAD0C;AAE1CC,EAAAA,OAF0C;AAG1CC,EAAAA,MAH0C;AAI1CC,EAAAA,QAJ0C;AAK1C,KAAGC;AALuC,CAA7B,EASE;AACf,QAAMC,cAAc,GAAG,oBAAQ,MAAM;AACnC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiB,SAAGC;AAApB,QAAuCR,KAA7C;AACA,WAAO,CAACR,MAAM,CAACG,SAAR,EAAmBa,cAAnB,CAAP;AACD,GAHsB,EAGpB,CAACR,KAAD,CAHoB,CAAvB;AAIA,QAAMS,SAA6B,GACjC,OAAOR,OAAP,KAAmB,UAAnB,GAAgCS,yBAAhC,GAAmDC,iBADrD;AAEA,sBAAOC,eAAMC,aAAN,CACLJ,SADK,EAEL,EAAE,GAAGL,UAAL;AAAiBJ,IAAAA,KAAK,EAAEK,cAAxB;AAAwCJ,IAAAA,OAAxC;AAAiDC,IAAAA;AAAjD,GAFK,EAGLC,QAHK,CAAP;AAKD","sourcesContent":["import React, {\n  ComponentType,\n  PropsWithChildren,\n  ReactElement,\n  useMemo\n} from 'react';\nimport { View, StyleSheet, ViewStyle, ViewProps } from 'react-native';\nimport GenericPressable from '../GenericPressable';\nimport { IMGElementProps } from './img-types';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignSelf: 'stretch',\n    justifyContent: 'center'\n  }\n});\n\n/**\n * Container for the {@link IMGElement} component.\n */\nexport default function IMGElementContainer({\n  style,\n  onPress,\n  testID,\n  children,\n  ...otherProps\n}: PropsWithChildren<\n  Pick<IMGElementProps, 'onPress' | 'testID'> &\n    Omit<ViewProps, 'style'> & { style: ViewStyle }\n>): ReactElement {\n  const containerStyle = useMemo(() => {\n    const { width, height, ...remainingStyle } = style;\n    return [styles.container, remainingStyle];\n  }, [style]);\n  const Container: ComponentType<any> =\n    typeof onPress === 'function' ? GenericPressable : View;\n  return React.createElement(\n    Container,\n    { ...otherProps, style: containerStyle, onPress, testID },\n    children\n  );\n}\n"]}