{"version":3,"sources":["ListElement.tsx"],"names":["getStartIndex","tnode","parsedIndex","attributes","start","Number","NaN","isNaN","pickMarkerTextStyles","extractMarkerTextStyle","Object","assign","lineHeight","fontSize","color","DEFAULT_TEXT_COLOR","styles","nativeTextFlow","getMarkerBoxStyle","markerWidth","paddingValue","markerBoxWidth","Math","max","width","listStyleTypeFallbackRecord","ol","ul","ListElement","TDefaultRenderer","listType","style","getFallbackListStyleTypeFromNestLevel","markerBoxStyle","markerTextStyle","providedMarkerTextStyle","enableExperimentalRtl","enableRemoveTopMarginIfNested","enableRemoveBottomMarginIfNested","enableDynamicMarkerBoxWidth","props","listStyleSpecs","markers","nestLevel","olNestLevel","ulNestLevel","TChildrenRenderer","rtl","direction","removeTopMarginStyle","parent","tagName","nodeIndex","zeroMarginTop","removeBottomMarginStyle","children","length","zeroMarginBottom","ownListType","webTextFlow","listStyleType","selectedListType","__DEV__","match","console","warn","spec","counterRenderer","counterStyleRenderer","startIndex","itemProps","rtlLineReversed","rtlMarkerReversed","dynamicMarkerBoxWidth","renderMarker","markerTextWidth","fixedPaddingRule","paddingLeft","markerBoxWidthStyle","renderChild","childElement","key","index","shrink","dynamicPaddingStyle","position","StyleSheet","create","marginTop","marginBottom","flexShrink"],"mappings":"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","sourcesContent":["import { StyleSheet, View } from 'react-native';\nimport React from 'react';\nimport { TBlock, TNode } from '@native-html/transient-render-engine';\nimport { MarkedListItem, useMarkedList } from '@jsamr/react-native-li';\nimport type {\n  DefaultSupportedListStyleType,\n  InternalRendererProps,\n  ListElementConfig,\n  TChildProps\n} from '../shared-types';\nimport { useTChildrenRenderer } from '../context/TChildrenRendererContext';\nimport { DEFAULT_TEXT_COLOR } from '../constants';\nimport pick from 'ramda/src/pick';\nimport { useListStyleSpecs } from '../context/ListStyleSpecsProvider';\n\nexport interface ListElementProps<T extends 'ol' | 'ul'>\n  extends InternalRendererProps<TBlock>,\n    ListElementConfig {\n  listType: T;\n}\n\nfunction getStartIndex(tnode: TNode) {\n  const parsedIndex = tnode.attributes.start\n    ? Number(tnode.attributes.start)\n    : Number.NaN;\n  return Number.isNaN(parsedIndex) ? 1 : parsedIndex;\n}\n\nconst pickMarkerTextStyles = pick([\n  'fontStyle',\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontVariant',\n  'color',\n  'lineHeight'\n]);\n\nfunction extractMarkerTextStyle(tnode: TNode) {\n  return Object.assign(\n    {\n      lineHeight: 14 * 1.3,\n      fontSize: 14,\n      color: DEFAULT_TEXT_COLOR\n    },\n    pickMarkerTextStyles(tnode.styles.nativeTextFlow)\n  );\n}\n\nexport function getMarkerBoxStyle(\n  markerWidth: number | false,\n  paddingValue: string | number | undefined\n) {\n  const markerBoxWidth =\n    typeof markerWidth === 'number'\n      ? typeof paddingValue === 'number'\n        ? Math.max(paddingValue, markerWidth)\n        : markerWidth\n      : paddingValue;\n  return { width: markerBoxWidth };\n}\n\nconst listStyleTypeFallbackRecord: Record<\n  'ol' | 'ul',\n  DefaultSupportedListStyleType\n> = {\n  ol: 'decimal',\n  ul: 'disc'\n};\n\nexport default function ListElement({\n  tnode,\n  TDefaultRenderer,\n  listType,\n  style,\n  getFallbackListStyleTypeFromNestLevel,\n  markerBoxStyle,\n  markerTextStyle: providedMarkerTextStyle,\n  enableExperimentalRtl = false,\n  enableRemoveTopMarginIfNested = true,\n  enableRemoveBottomMarginIfNested = true,\n  enableDynamicMarkerBoxWidth = false,\n  ...props\n}: ListElementProps<'ol' | 'ul'>) {\n  const listStyleSpecs = useListStyleSpecs();\n  const markers = tnode.markers;\n  const nestLevel =\n    listType === 'ol' ? markers.olNestLevel : markers.ulNestLevel;\n  const TChildrenRenderer = useTChildrenRenderer();\n  const rtl =\n    enableExperimentalRtl &&\n    (style.direction === 'rtl' || markers.direction === 'rtl');\n  const removeTopMarginStyle =\n    enableRemoveTopMarginIfNested &&\n    tnode.parent?.tagName === 'li' &&\n    tnode.nodeIndex === 0\n      ? styles.zeroMarginTop\n      : null;\n  const removeBottomMarginStyle =\n    enableRemoveBottomMarginIfNested &&\n    tnode.parent?.tagName === 'li' &&\n    tnode.nodeIndex === tnode.parent?.children.length - 1\n      ? styles.zeroMarginBottom\n      : null;\n  const ownListType = tnode.styles.webTextFlow.listStyleType as\n    | DefaultSupportedListStyleType\n    | undefined;\n  const selectedListType =\n    getFallbackListStyleTypeFromNestLevel!(nestLevel) ||\n    ownListType ||\n    listStyleTypeFallbackRecord[listType];\n  const listStyleType = ownListType || selectedListType;\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    !(listStyleType in listStyleSpecs)\n  ) {\n    if (listStyleType.match(/^(\"|')/)) {\n      console.warn(\n        \"This library doesn't support strings for list-style-type CSS properties.\"\n      );\n    } else {\n      console.warn(\n        `list-style-type \"${listStyleType}\" is not handled by react-native-render-html. ` +\n          'You can easily provide support for this style via \"customListStyleSpecs\" prop.'\n      );\n    }\n  }\n  const spec =\n    listStyleType in listStyleSpecs\n      ? listStyleSpecs[listStyleType]\n      : listStyleSpecs[selectedListType];\n  const counterRenderer = spec.counterStyleRenderer;\n  const startIndex = getStartIndex(tnode);\n  const markerTextStyle =\n    typeof providedMarkerTextStyle === 'object' && providedMarkerTextStyle\n      ? { ...extractMarkerTextStyle(tnode), ...providedMarkerTextStyle }\n      : extractMarkerTextStyle(tnode);\n  const itemProps = useMarkedList({\n    counterRenderer,\n    startIndex,\n    markerTextStyle,\n    markerBoxStyle,\n    rtlLineReversed: rtl,\n    rtlMarkerReversed: rtl,\n    length: tnode.children.length,\n    dynamicMarkerBoxWidth: enableDynamicMarkerBoxWidth,\n    renderMarker: spec.renderMarker\n  });\n  const markerWidth = itemProps.markerTextWidth;\n  const fixedPaddingRule = rtl\n    ? ('paddingRight' as const)\n    : ('paddingLeft' as const);\n  // Fallback to padding-left value on RTL mode\n  const paddingValue = style[fixedPaddingRule] ?? style.paddingLeft;\n  const markerBoxWidthStyle = getMarkerBoxStyle(markerWidth, paddingValue);\n  const renderChild = ({ childElement, key, index }: TChildProps) => (\n    <MarkedListItem\n      key={key}\n      index={index}\n      {...itemProps}\n      markerBoxStyle={[itemProps.markerBoxStyle, markerBoxWidthStyle]}\n      markerTextStyle={itemProps.markerTextStyle}\n      enableMarkerClipping\n      style={itemProps.style}>\n      <View style={styles.shrink}>{childElement}</View>\n    </MarkedListItem>\n  );\n\n  const dynamicPaddingStyle = {\n    position: 'relative' as const,\n    [fixedPaddingRule]: 0\n  };\n  return (\n    <TDefaultRenderer\n      tnode={tnode}\n      style={[\n        style,\n        removeTopMarginStyle,\n        removeBottomMarginStyle,\n        dynamicPaddingStyle\n      ]}\n      {...props}>\n      <TChildrenRenderer tchildren={tnode.children} renderChild={renderChild} />\n    </TDefaultRenderer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  zeroMarginTop: { marginTop: 0 },\n  zeroMarginBottom: { marginBottom: 0 },\n  shrink: { flexShrink: 1 }\n});\n"]}