{"version":3,"sources":["useIMGElementStateWithCache.ts"],"names":["useIMGElementStateWithCache","props","alt","altColor","source","contentWidth","computeMaxWidth","objectFit","initialDimensions","defaultImageInitialDimensions","cachedNaturalDimensions","flatStyle","specifiedDimensions","nomalizedSource","concreteDimensions","naturalDimensions","error","containerStyle"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASA,2BAAT,CACbC,KADa,EAEkC;AAC/C,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,iBAAiB,GAAGC,sCAPhB;AAQJC,IAAAA;AARI,MASFT,KATJ;AAUA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAqC,0CAA4BX,KAA5B,CAA3C;AACA,QAAMY,eAAe,GAAG,qCAAuB;AAC7CD,IAAAA,mBAD6C;AAE7CR,IAAAA;AAF6C,GAAvB,CAAxB;AAIA,QAAMU,kBAAkB,GAAG,yCAA2B;AACpDH,IAAAA,SADoD;AAEpDI,IAAAA,iBAAiB,EAAEL,uBAFiC;AAGpDE,IAAAA,mBAHoD;AAIpDN,IAAAA,eAJoD;AAKpDD,IAAAA;AALoD,GAA3B,CAA3B;AAQA,SAAO,8BAAY;AACjBW,IAAAA,KAAK,EAAE,IADU;AAEjBF,IAAAA,kBAFiB;AAGjBG,IAAAA,cAAc,EAAEN,SAHC;AAIjBH,IAAAA,iBAJiB;AAKjBD,IAAAA,SALiB;AAMjBH,IAAAA,MAAM,EAAES,eANS;AAOjBX,IAAAA,GAPiB;AAQjBC,IAAAA;AARiB,GAAZ,CAAP;AAUD","sourcesContent":["import defaultImageInitialDimensions from './defaultInitialImageDimensions';\nimport { getIMGState } from './getIMGState';\nimport type {\n  UseIMGElementStateWithCacheProps,\n  IMGElementStateError,\n  IMGElementStateSuccess\n} from './img-types';\nimport useImageConcreteDimensions from './useImageConcreteDimensions';\nimport useImageSpecifiedDimensions from './useImageSpecifiedDimensions';\nimport useIMGNormalizedSource from './useIMGNormalizedSource';\n\n/**\n * This hook is useful when one has access to image natural dimensions prior to\n * loading. The `cachedNaturalDimensions` prop must be passed to immediately\n * compute concrete dimensions.\n */\nexport default function useIMGElementStateWithCache(\n  props: UseIMGElementStateWithCacheProps\n): IMGElementStateError | IMGElementStateSuccess {\n  const {\n    alt,\n    altColor,\n    source,\n    contentWidth,\n    computeMaxWidth,\n    objectFit,\n    initialDimensions = defaultImageInitialDimensions,\n    cachedNaturalDimensions\n  } = props;\n  const { flatStyle, specifiedDimensions } = useImageSpecifiedDimensions(props);\n  const nomalizedSource = useIMGNormalizedSource({\n    specifiedDimensions,\n    source\n  });\n  const concreteDimensions = useImageConcreteDimensions({\n    flatStyle,\n    naturalDimensions: cachedNaturalDimensions,\n    specifiedDimensions,\n    computeMaxWidth,\n    contentWidth\n  });\n\n  return getIMGState({\n    error: null,\n    concreteDimensions,\n    containerStyle: flatStyle,\n    initialDimensions,\n    objectFit,\n    source: nomalizedSource,\n    alt,\n    altColor\n  });\n}\n"]}