{"version":3,"sources":["TDocumentRenderer.tsx"],"names":["TDocumentRenderer","tdoc","baseUrl","onDocumentMetadataLoaded","metadata","baseHref","baseTarget","lang","links","meta","title","dir","context","call"],"mappings":";;;;;;;AAAA;;AAGA;;AACA;;;;;;;;AAEA,MAAMA,iBAAiB,gBAAG,iBACxB,CAAC;AACCC,EAAAA,IADD;AAECC,EAAAA,OAFD;AAGCC,EAAAA;AAHD,CAAD,KAQM;AACJ,QAAMC,QAA0B,GAAG,oBAAQ,MAAM;AAC/C,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,UAAZ;AAAwBC,MAAAA,IAAxB;AAA8BC,MAAAA,KAA9B;AAAqCC,MAAAA,IAArC;AAA2CC,MAAAA,KAA3C;AAAkDC,MAAAA;AAAlD,QACJV,IAAI,CAACW,OADP;AAEA,WAAO;AACLN,MAAAA,UADK;AAELJ,MAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAaG,QAFf;AAGLE,MAAAA,IAHK;AAILI,MAAAA,GAJK;AAKLH,MAAAA,KALK;AAMLC,MAAAA,IANK;AAOLC,MAAAA;AAPK,KAAP;AASD,GAZkC,EAYhC,CAACT,IAAI,CAACW,OAAN,EAAeV,OAAf,CAZgC,CAAnC;AAaA,wBAAU,MAAM;AACdC,IAAAA,wBAAwB,SAAxB,IAAAA,wBAAwB,WAAxB,YAAAA,wBAAwB,CAAEU,IAA1B,CAA+B,IAA/B,EAAqCT,QAArC;AACD,GAFD,EAEG,CAACD,wBAAD,EAA2BC,QAA3B,CAFH;AAGA,sBACE,6BAAC,iCAAD;AAA0B,IAAA,KAAK,EAAEA;AAAjC,kBACE,6BAAC,sBAAD;AAAe,IAAA,WAAW,EAAE,CAA5B;AAA+B,IAAA,YAAY,EAAE,CAA7C;AAAgD,IAAA,KAAK,EAAEH;AAAvD,IADF,CADF;AAKD,CA/BuB,CAA1B;eAiCeD,iB","sourcesContent":["import React, { memo, useEffect, useMemo } from 'react';\nimport { TDocument } from '@native-html/transient-render-engine';\nimport { DocumentMetadata, RenderHTMLSourceProps } from './shared-types';\nimport DocumentMetadataProvider from './context/DocumentMetadataProvider';\nimport TNodeRenderer from './TNodeRenderer';\n\nconst TDocumentRenderer = memo(\n  ({\n    tdoc,\n    baseUrl,\n    onDocumentMetadataLoaded\n  }: {\n    baseUrl?: string;\n    onDocumentMetadataLoaded?: RenderHTMLSourceProps['onDocumentMetadataLoaded'];\n    tdoc: TDocument;\n  }) => {\n    const metadata: DocumentMetadata = useMemo(() => {\n      const { baseHref, baseTarget, lang, links, meta, title, dir } =\n        tdoc.context;\n      return {\n        baseTarget,\n        baseUrl: baseUrl ?? baseHref,\n        lang,\n        dir,\n        links,\n        meta,\n        title\n      };\n    }, [tdoc.context, baseUrl]);\n    useEffect(() => {\n      onDocumentMetadataLoaded?.call(null, metadata);\n    }, [onDocumentMetadataLoaded, metadata]);\n    return (\n      <DocumentMetadataProvider value={metadata}>\n        <TNodeRenderer renderIndex={0} renderLength={1} tnode={tdoc} />\n      </DocumentMetadataProvider>\n    );\n  }\n);\nexport default TDocumentRenderer;\n"]}