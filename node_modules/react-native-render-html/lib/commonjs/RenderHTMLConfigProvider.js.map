{"version":3,"sources":["RenderHTMLConfigProvider.tsx"],"names":["childrenRendererContext","TChildrenRenderer","TNodeChildrenRenderer","renderHTMLConfigPropTypes","bypassAnonymousTPhrasingNodes","PropTypes","bool","defaultTextProps","object","defaultViewProps","enableExperimentalBRCollapsing","enableExperimentalGhostLinesPrevention","enableExperimentalMarginCollapsing","remoteErrorView","func","remoteLoadingView","debug","computeEmbeddedMaxWidth","renderersProps","WebView","any","GenericPressable","defaultWebViewProps","pressableHightlightColor","string","customListStyleSpecs","renderers","provideEmbeddedHeaders","RenderHTMLConfigProvider","props","children","sharedProps","engine","profile","prop","sourceLoaderConfig","__DEV__","defaultRenderError","defaultRenderLoading","getHTMLElementsModels","propTypes"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,uBAAuB,GAAG;AAC9BC,EAAAA,iBAAiB,EAAjBA,0BAD8B;AAE9BC,EAAAA,qBAAqB,EAArBA;AAF8B,CAAhC;AAOO,MAAMC,yBAAoD,GAAG;AAClEC,EAAAA,6BAA6B,EAAEC,mBAAUC,IADyB;AAElEC,EAAAA,gBAAgB,EAAEF,mBAAUG,MAFsC;AAGlEC,EAAAA,gBAAgB,EAAEJ,mBAAUG,MAHsC;AAIlEE,EAAAA,8BAA8B,EAAEL,mBAAUC,IAJwB;AAKlEK,EAAAA,sCAAsC,EAAEN,mBAAUC,IALgB;AAMlEM,EAAAA,kCAAkC,EAAEP,mBAAUC,IANoB;AAOlEO,EAAAA,eAAe,EAAER,mBAAUS,IAPuC;AAQlEC,EAAAA,iBAAiB,EAAEV,mBAAUS,IARqC;AASlEE,EAAAA,KAAK,EAAEX,mBAAUC,IATiD;AAUlEW,EAAAA,uBAAuB,EAAEZ,mBAAUS,IAV+B;AAWlEI,EAAAA,cAAc,EAAEb,mBAAUG,MAXwC;AAYlEW,EAAAA,OAAO,EAAEd,mBAAUe,GAZ+C;AAalEC,EAAAA,gBAAgB,EAAEhB,mBAAUe,GAbsC;AAclEE,EAAAA,mBAAmB,EAAEjB,mBAAUG,MAdmC;AAelEe,EAAAA,wBAAwB,EAAElB,mBAAUmB,MAf8B;AAgBlEC,EAAAA,oBAAoB,EAAEpB,mBAAUG,MAhBkC;AAiBlEkB,EAAAA,SAAS,EAAErB,mBAAUG,MAjB6C;AAkBlEmB,EAAAA,sBAAsB,EAAEtB,mBAAUS;AAlBgC,CAA7D;AAqBP;AACA;AACA;AACA;;;;AACe,SAASc,wBAAT,CACbC,KADa,EAEC;AACd,QAAM;AACJhB,IAAAA,eADI;AAEJE,IAAAA,iBAFI;AAGJG,IAAAA,cAHI;AAIJY,IAAAA,QAJI;AAKJJ,IAAAA,SALI;AAMJ,OAAGK;AANC,MAOFF,KAPJ;AAQA,QAAMG,MAAM,GAAG,qDAAf;AACA,QAAMC,OAAO,GAAG,0BAAY;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAZ,CAAhB;AACA,QAAMC,kBAAkB,GAAG,oBAAQ,MAAM;AACvC,WAAOC,OAAP,KAAmB,SAAnB,IAAgCA,OAAhC,IAA2CH,OAAO,EAAlD;AACA,WAAO;AACLpB,MAAAA,eAAe,EAAEA,eAAe,IAAIwB,uCAD/B;AAELtB,MAAAA,iBAAiB,EAAEA,iBAAiB,IAAIuB;AAFnC,KAAP;AAID,GAN0B,EAMxB,CAACzB,eAAD,EAAkBE,iBAAlB,EAAqCkB,OAArC,CANwB,CAA3B;AAOA,sBACE,6BAAC,+BAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,aAAa,EAAEM,MAAM,CAACO,qBAAP;AAFjB,kBAGE,6BAAC,4BAAD,EAAyBR,WAAzB,eACE,6BAAC,+BAAD,qBACE,6BAAC,+BAAD;AAAwB,IAAA,cAAc,EAAEb;AAAxC,kBACE,6BAAC,iCAAD,CAA2B,QAA3B;AAAoC,IAAA,KAAK,EAAElB;AAA3C,kBACE,6BAAC,4BAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEmC;AAArC,KACGL,QADH,CADF,CADF,CADF,CADF,CAHF,CADF;AAiBD;AAED;AACA;AACA;;;AACAF,wBAAwB,CAACY,SAAzB,GAAqCrC,yBAArC","sourcesContent":["import React, { PropsWithChildren, ReactElement, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport RenderersPropsProvider from './context/RenderersPropsProvider';\nimport SharedPropsProvider from './context/SharedPropsProvider';\nimport TChildrenRenderersContext from './context/TChildrenRendererContext';\nimport { RenderHTMLConfig } from './shared-types';\nimport TNodeChildrenRenderer from './TNodeChildrenRenderer';\nimport TChildrenRenderer from './TChildrenRenderer';\nimport sourceLoaderContext, {\n  defaultRenderError,\n  defaultRenderLoading\n} from './context/sourceLoaderContext';\nimport RenderRegistryProvider from './context/RenderRegistryProvider';\nimport { useAmbientTRenderEngine } from './TRenderEngineProvider';\nimport useProfiler from './hooks/useProfiler';\nimport ListStyleSpecsProvider from './context/ListStyleSpecsProvider';\n\nconst childrenRendererContext = {\n  TChildrenRenderer,\n  TNodeChildrenRenderer\n};\n\nexport type RenderHTMLConfigPropTypes = Record<keyof RenderHTMLConfig, any>;\n\nexport const renderHTMLConfigPropTypes: RenderHTMLConfigPropTypes = {\n  bypassAnonymousTPhrasingNodes: PropTypes.bool,\n  defaultTextProps: PropTypes.object,\n  defaultViewProps: PropTypes.object,\n  enableExperimentalBRCollapsing: PropTypes.bool,\n  enableExperimentalGhostLinesPrevention: PropTypes.bool,\n  enableExperimentalMarginCollapsing: PropTypes.bool,\n  remoteErrorView: PropTypes.func,\n  remoteLoadingView: PropTypes.func,\n  debug: PropTypes.bool,\n  computeEmbeddedMaxWidth: PropTypes.func,\n  renderersProps: PropTypes.object,\n  WebView: PropTypes.any,\n  GenericPressable: PropTypes.any,\n  defaultWebViewProps: PropTypes.object,\n  pressableHightlightColor: PropTypes.string,\n  customListStyleSpecs: PropTypes.object,\n  renderers: PropTypes.object,\n  provideEmbeddedHeaders: PropTypes.func\n};\n\n/**\n * A component to provide configuration for {@link RenderHTMLSource}\n * descendants, to be used in conjunction with {@link TRenderEngineProvider}.\n */\nexport default function RenderHTMLConfigProvider(\n  props: PropsWithChildren<RenderHTMLConfig>\n): ReactElement {\n  const {\n    remoteErrorView,\n    remoteLoadingView,\n    renderersProps,\n    children,\n    renderers,\n    ...sharedProps\n  } = props;\n  const engine = useAmbientTRenderEngine();\n  const profile = useProfiler({ prop: 'remoteErrorView or remoteLoadingView' });\n  const sourceLoaderConfig = useMemo(() => {\n    typeof __DEV__ === 'boolean' && __DEV__ && profile();\n    return {\n      remoteErrorView: remoteErrorView || defaultRenderError,\n      remoteLoadingView: remoteLoadingView || defaultRenderLoading\n    };\n  }, [remoteErrorView, remoteLoadingView, profile]);\n  return (\n    <RenderRegistryProvider\n      renderers={renderers}\n      elementModels={engine.getHTMLElementsModels()}>\n      <SharedPropsProvider {...sharedProps}>\n        <ListStyleSpecsProvider>\n          <RenderersPropsProvider renderersProps={renderersProps}>\n            <TChildrenRenderersContext.Provider value={childrenRendererContext}>\n              <sourceLoaderContext.Provider value={sourceLoaderConfig}>\n                {children}\n              </sourceLoaderContext.Provider>\n            </TChildrenRenderersContext.Provider>\n          </RenderersPropsProvider>\n        </ListStyleSpecsProvider>\n      </SharedPropsProvider>\n    </RenderRegistryProvider>\n  );\n}\n\n/**\n * @ignore\n */\nRenderHTMLConfigProvider.propTypes = renderHTMLConfigPropTypes;\n"]}