"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _SpinnerProps = require("./SpinnerProps");

var _AnimationContainer = _interopRequireDefault(require("./AnimationContainer"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const values = [2, 3, 4, 1, 2, 3, 0, 1, 2];

class Grid extends React.Component {
  render() {
    const {
      size,
      color,
      style,
      animating,
      hidesWhenStopped,
      ...rest
    } = this.props;
    return /*#__PURE__*/React.createElement(_AnimationContainer.default, {
      initAnimation: () => ({
        grid: value => (0, _utils.stagger)(100, 5, {
          duration: 1300,
          value: value,
          keyframes: [0, 35, 70, 100]
        })
      }),
      animating: animating
    }, interpolations => /*#__PURE__*/React.createElement(_reactNative.View, _extends({
      style: [{
        width: size,
        height: size,
        flexWrap: 'wrap',
        flexDirection: 'row',
        opacity: !animating && hidesWhenStopped ? 0 : 1
      }, style]
    }, rest), values.map(value => interpolations.grid[value]).map((value, index) => /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
      key: index,
      style: {
        width: size / 3,
        height: size / 3,
        backgroundColor: color,
        transform: [{
          scale: value.interpolate({
            inputRange: [0, 35, 70, 100],
            outputRange: [1, 0.01, 1, 1]
          })
        }]
      }
    }))));
  }

}

exports.default = Grid;

_defineProperty(Grid, "defaultProps", _SpinnerProps.defaultProps);
//# sourceMappingURL=Grid.js.map