{"version":3,"sources":["Bounce.tsx"],"names":["React","Animated","View","defaultProps","AnimationContainer","stagger","Bounce","Component","render","size","color","style","animating","hidesWhenStopped","rest","props","circleStyle","position","width","height","backgroundColor","borderRadius","opacity","bounce","value","duration","keyframes","values","map","index","transform","scale","interpolate","inputRange","outputRange"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,cAA/B;AACA,SAAuBC,YAAvB,QAA2C,gBAA3C;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,eAAe,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAmD;AAGhEC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,IADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA,gBALI;AAMJ,SAAGC;AANC,QAOF,KAAKC,KAPT;AAQA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,QAAQ,EAAE,UADQ;AAElBC,MAAAA,KAAK,EAAET,IAFW;AAGlBU,MAAAA,MAAM,EAAEV,IAHU;AAIlBW,MAAAA,eAAe,EAAEV,KAJC;AAKlBW,MAAAA,YAAY,EAAEZ,IAAI,GAAG,CALH;AAMlBa,MAAAA,OAAO,EAAE;AANS,KAApB;AASA,wBACE,oBAAC,kBAAD;AACE,MAAA,aAAa,EAAE,OAAO;AACpBC,QAAAA,MAAM,EAAGC,KAAD,IACNnB,OAAO,CAAC,IAAD,EAAO,CAAP,EAAU;AACfoB,UAAAA,QAAQ,EAAE,IADK;AAEfD,UAAAA,KAAK,EAAEA,KAFQ;AAGfE,UAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ;AAHI,SAAV;AAFW,OAAP,CADjB;AASE,MAAA,SAAS,EAAEd;AATb,OAWIe,MAAD,iBACC,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACL;AACET,QAAAA,KAAK,EAAET,IADT;AAEEU,QAAAA,MAAM,EAAEV,IAFV;AAGEa,QAAAA,OAAO,EAAE,CAACV,SAAD,IAAcC,gBAAd,GAAiC,CAAjC,GAAqC;AAHhD,OADK,EAMLF,KANK;AADT,OASMG,IATN,GAWGa,MAAM,CAACJ,MAAP,CAAcK,GAAd,CAAkB,CAACJ,KAAD,EAAQK,KAAR,kBACjB,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAE,CACLb,WADK,EAEL;AACEc,QAAAA,SAAS,EAAE,CACT;AACEC,UAAAA,KAAK,EAAEP,KAAK,CAACQ,WAAN,CAAkB;AACvBC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,GAAZ,CADW;AAEvBC,YAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,CAAP,EAAU,CAAV,EAAa,IAAb;AAFU,WAAlB;AADT,SADS;AADb,OAFK;AAFT,MADD,CAXH,CAZJ,CADF;AA8CD;;AAnE+D;;gBAA7C5B,M,kBACGH,Y","sourcesContent":["import * as React from 'react'\nimport { Animated, View } from 'react-native'\nimport { SpinnerProps, defaultProps } from './SpinnerProps'\nimport AnimationContainer from './AnimationContainer'\nimport { stagger } from './utils'\n\nexport default class Bounce extends React.Component<SpinnerProps> {\n  static defaultProps = defaultProps\n\n  render() {\n    const {\n      size,\n      color,\n      style,\n      animating,\n      hidesWhenStopped,\n      ...rest\n    } = this.props\n    const circleStyle = {\n      position: 'absolute',\n      width: size,\n      height: size,\n      backgroundColor: color,\n      borderRadius: size / 2,\n      opacity: 0.6,\n    }\n\n    return (\n      <AnimationContainer\n        initAnimation={() => ({\n          bounce: (value) =>\n            stagger(1000, 2, {\n              duration: 2000,\n              value: value,\n              keyframes: [0, 45, 55, 100],\n            }),\n        })}\n        animating={animating}\n      >\n        {(values) => (\n          <View\n            style={[\n              {\n                width: size,\n                height: size,\n                opacity: !animating && hidesWhenStopped ? 0 : 1,\n              },\n              style,\n            ]}\n            {...rest}\n          >\n            {values.bounce.map((value, index) => (\n              <Animated.View\n                key={index}\n                style={[\n                  circleStyle,\n                  {\n                    transform: [\n                      {\n                        scale: value.interpolate({\n                          inputRange: [0, 45, 55, 100],\n                          outputRange: [0.01, 1, 1, 0.01],\n                        }),\n                      },\n                    ],\n                  },\n                ]}\n              />\n            ))}\n          </View>\n        )}\n      </AnimationContainer>\n    )\n  }\n}\n"]}