function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import * as React from 'react';
import { Animated, Easing } from 'react-native';
import { defaultProps } from './SpinnerProps';
import AnimationContainer from './AnimationContainer';
import { loop } from './utils';
export default class Pulse extends React.Component {
  render() {
    const {
      size,
      color,
      style,
      animating,
      hidesWhenStopped,
      ...rest
    } = this.props;
    return /*#__PURE__*/React.createElement(AnimationContainer, {
      initAnimation: () => ({
        pulse: value => ({
          values: [value],
          animation: loop({
            duration: 1200,
            value: value,
            easing: Easing.bezier(0.455, 0.03, 0.515, 0.955)
          })
        })
      }),
      animating: animating
    }, values => /*#__PURE__*/React.createElement(Animated.View, _extends({
      style: [{
        width: size,
        height: size,
        backgroundColor: color,
        borderRadius: size / 2,
        opacity: !animating && hidesWhenStopped ? 0 : values.pulse[0].interpolate({
          inputRange: [0, 100],
          outputRange: [1, 0]
        }),
        transform: [{
          scale: values.pulse[0].interpolate({
            inputRange: [0, 100],
            outputRange: [0.01, 1]
          })
        }]
      }, style]
    }, rest)));
  }

}

_defineProperty(Pulse, "defaultProps", defaultProps);
//# sourceMappingURL=Pulse.js.map