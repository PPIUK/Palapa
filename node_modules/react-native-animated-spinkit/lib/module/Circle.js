function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import * as React from 'react';
import { Animated, View } from 'react-native';
import { defaultProps } from './SpinnerProps';
import AnimationContainer from './AnimationContainer';
import { stagger } from './utils';
export default class Circle extends React.Component {
  render() {
    const {
      size,
      color,
      style,
      animating,
      hidesWhenStopped,
      ...rest
    } = this.props;
    const circleStyle = {
      position: 'absolute',
      width: size * 0.15,
      height: size * 0.15,
      backgroundColor: color,
      borderRadius: size * 0.15 / 2
    };
    return /*#__PURE__*/React.createElement(AnimationContainer, {
      initAnimation: () => ({
        circle: value => stagger(100, 12, {
          duration: 1200,
          value: value,
          keyframes: [0, 40, 80, 100]
        })
      }),
      animating: animating
    }, values => /*#__PURE__*/React.createElement(View, _extends({
      style: [{
        width: size,
        height: size,
        alignItems: 'center',
        justifyContent: 'center',
        opacity: !animating && hidesWhenStopped ? 0 : 1
      }, style]
    }, rest), values.circle.map((value, index) => /*#__PURE__*/React.createElement(Animated.View, {
      key: index,
      style: [circleStyle, {
        transform: [{
          rotate: "".concat(index * 30, "deg")
        }, {
          translateY: -size / 2 + size * 0.15 / 2
        }, {
          scale: value.interpolate({
            inputRange: [0, 40, 80, 100],
            outputRange: [0.01, 1, 0.01, 0.01]
          })
        }]
      }]
    }))));
  }

}

_defineProperty(Circle, "defaultProps", defaultProps);
//# sourceMappingURL=Circle.js.map