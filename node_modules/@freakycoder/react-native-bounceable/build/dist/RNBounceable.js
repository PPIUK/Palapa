"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const react_native_1 = require("react-native");
class RNBounceable extends React.Component {
    constructor(props) {
        super(props);
        this.animate = () => {
            const { springValue } = this.state;
            const { bounceEffect = 0.9, bounceFriction = 3, useNativeDriver = true, } = this.props;
            springValue.setValue(bounceEffect);
            react_native_1.Animated.spring(springValue, {
                toValue: 1,
                friction: bounceFriction,
                useNativeDriver,
            }).start();
        };
        this.onPress = () => {
            this.animate();
            // ?  Outside of the onPress function callback
            this.props.onPress && this.props.onPress();
        };
        this.state = {
            springValue: new react_native_1.Animated.Value(1),
        };
    }
    render() {
        const { children, style } = this.props;
        return (<react_native_1.TouchableWithoutFeedback {...this.props} onPress={this.onPress.bind(this, react_native_1.Easing.bounce)}>
        <react_native_1.Animated.View style={[{ transform: [{ scale: this.state.springValue }] }, style]}>
          {children}
        </react_native_1.Animated.View>
      </react_native_1.TouchableWithoutFeedback>);
    }
}
exports.default = RNBounceable;
//# sourceMappingURL=RNBounceable.js.map